{
  "SaveName": "Kill Team Octarius Map Pack",
  "EpochTime": 1632031604,
  "Date": "9/19/2021 2:06:44 AM",
  "VersionNumber": "v13.1.1",
  "GameMode": "KT2",
  "GameType": "Game",
  "GameComplexity": "Low Complexity",
  "PlayingTime": [
    0,
    0
  ],
  "PlayerCounts": [
    0,
    4
  ],
  "Tags": [],
  "Gravity": 0.5000001,
  "PlayArea": 1.0,
  "Table": "Table_None",
  "Sky": "Sky_Museum",
  "Note": "By default hands are hidden.\n\nInstructions can be found by clicking the relative purple buttons on the table.\n\nThe Notepad contains the full credits.",
  "TabStates": {
    "0": {
      "title": "Instructions",
      "body": "INSTRUCTIONS AND IMPROVEMENTS\r\n\r\nThe battle mat is a modified \"Flex Table\" (by MrStump) with fixed dimensions. You can change the background of the mat by clicking on the white button on one of the legs and paste the URL of the image.\r\n\nYou can store URLs in memory by adding them individually so you can recall them easily if you want to make a local version with stored images.\r\nAn improvement in version 2 is that you now only need to provide the image of the battle mat itself, you donâ€™t need to edit a massive image containing the felt part. For best results, use an image with the correct ratio!\n\nObjective markers have a 3\" sphere state so you can easily check range. The number of the objective is shown even in that state, by clicking on the button it will go back to state one. The tokens also have a generic back for hidden objectives, you can switch to the sphere mode too but in that case no number will be displayed.\n \nTo roll dice simply drop them into the small cardboard box, it will roll them and place them in order on the rolling mat.\nThe rolling mat will display the results along with the total dice rolled.\r\nUse the description of the small box to change your preferences and the behavior of the tool.\n\nYou can find a set of useful generic tokens at the head of the table, copy them and use them as you see fit.\n\nThe counters are self explanatory, the players turn and the game turn ones are automatic, you don't need to update the manually. The victory ones will reflect the value of the ITC Score sheet if you use it.\n\nAdded infinite bags of 9 color dice.\r\n\r\nWhen loading a save file of a started game, the players will be automatically placed in the seats they had when started to play.\n\r\n\r\n\nSETTING UP THE GAME\r\n\r\nWhen loading or connecting choose your seat in the shown menu.\r\n\r\nAdditive load a terrain save file for BCB Gaming Template v2.0 or above, the map and the mat background will be placed. Confirm it or remove if you want to change with another map.\r\nYou can make those save files with the BCB Terrain  Generator v2.0 or above.\r\nYou can find the BCB Terrain Generator on the workshop.\r\n\r\nEach player then can spawn his or her own Objective Deck, Psychic Power Deck and Special Token Bag by clicking the button on the relative area and choosing from the menu. You can change it multiple times and when you are done confirm each item.\r\nThe Tactical Objective cards should snap in position and rotation onto the \"Discard\" slot. The hands are in the middle so you can draw cards from deck easily.\r\n\r\nYou can then import your army. If you import one made with the BCB Army Builder v2.0 or above \r(also on the workshop) just additive load the save file and use the buttons to place the army on your side or remove it if you want to change it. Make sure that nobody loads a new army until the previous one is placed or deleted to prevent physics spaz.\r\n\r\nUse the menu on the top of the gaming mat to place the chosen deployment areas and if needed the ITC Objectives for the chosen Scenario.\r\n\r\nSTARTING THE GAME\r\n\r\nDeploy the armies as per the rules for the mission you are playing..\r\n\r\nSelect the starting player with the toggle button and when you are ready start the game with the relative button. Turns will be automatically enabled in the chosen order.\r\n\r\nDuring game you can recall the selected deployment zones and the range checkers by clicking on the relative buttons placed near the top of battle mat.\r\n\r\nAt the start of the 6th and 7th turn you will receive a warning for checking if the game ends or not. Make your choice with the buttons that will spawn around the turn counter.  At the start of 8th turn you will be notified that the game is over.\r\n\r\nYou can save and load your game at any point of the game or setup. In case of bugs simply let GenWilhelm, Mothman-Zack, or Zyllos know and it will be dealt with as soon as possible.\r\n\r\n",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "Credits",
      "body": "*******************Credits*******************\nFlex Table (id: 1169112551)\n\nKustom 40k Dice Roller\r by BaconCatBug (id: 959360907)\n\nTactical Objective Decks by GenWilhelm and BaconCatBug (id: 950253690)\n\nTokens by Malice of the Reddit 40k TTS Discord http://discord.gg/XkBbs5M\n(id: 1364449509) \n\nMemory Bag 2.0 by MrStump (id: 953770080)\n\nWargame Rulers by D6 (id: 1255723994)\n\nCamera pack by ThatRobHuman ",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 1
    },
    "2": {
      "title": "Scoreboard Settings",
      "body": "{\r\n  \"packet\":{\r\n    \"name\":\"KT2\",\r\n    \"players\":[\r\n      \"Red\",\r\n      \"Blue\"\r\n    ],\r\n    \"streamers\":[\r\n      \"Black\",\r\n      \"White\"\r\n    ],\r\n    \"autoPromote\":true\r\n  },\r\n  \"scoring\":{\r\n    \"maxRounds\":4,\r\n    \"max\":18,\r\n    \"limitRecordToMax\":false,\r\n    \"primary\":{\r\n      \"max\":12,\r\n      \"maxEach\":0,\r\n      \"objectives\":[\r\n        \"1+\",\r\n        \"2+\",\r\n        \"3+\",\r\n\t\t\"4+\"\r\n      ],\r\n      \"exclusive\":[\r\n        false,\r\n        false,\r\n        false,\r\n\t\tfalse\r\n      ]\r\n    },\r\n    \"secondary\":{\r\n      \"max\":6,\r\n      \"maxEach\":2,\r\n      \"objectives\":[\r\n        \"Challenge\",\r\n        \"Rout\",\r\n        \"Execution\",\r\n        \"Deadly Marksman\",\r\n        \"Rob and Ransack\",\r\n        \"Seize Ground\",\r\n        \"Hold the Line\",\r\n        \"Protect Assets\",\r\n        \"Damage Limitation\",\r\n        \"Plant Banner\",\r\n        \"Central Control\",\r\n        \"Capture Hostage & Infiltrate\",\r\n        \"Behind Enemy Lines\",\r\n        \"Upload Viral Code\",\r\n\t\t\"Implant\",\r\n\t\t\"Sabotage\",\r\n\t\t\"Interloper\",\r\n\t\t\"Mark Target\",\r\n\t\t\"Triangulate\",\r\n\t\t\"Plant Signal Beacon\",\r\n\t\t\"Vantage\",\r\n\t\t\"Retrieval\",\r\n\t\t\"Overrun\",\r\n\t\t\"Headhunter\",\r\n\t\t\"Shokk Taktiks\",\r\n\t\t\"Get Stuck In!\",\r\n\t\t\"Blow it up!\",\r\n\t\t\"Stand Fast\",\r\n\t\t\"Boots on the Ground\",\r\n\t\t\"Glory in Death\"\r\n      ],\r\n      \"maxExemption\":{\r\n      }\r\n    },\r\n    \"bonus\":{\r\n      \"max\":0,\r\n      \"objectives\":[\r\n      ]\r\n    }\r\n  },\r\n  \"art\":{\r\n    \"graphics\":{\r\n      \"eventLogo\":null,\r\n      \"eventBanner\":null,\r\n      \"initiative\":{\r\n        \"Off\":\"http://cloud-3.steamusercontent.com/ugc/1750182972143392609/48283228AFC1906F43CD6D39A402B3DC29EAE371/\",\r\n        \"On\":\"http://cloud-3.steamusercontent.com/ugc/1750182972143393402/5BE39A862B6C1F71A467892906E21C0CD54C257E/\"\r\n      },\r\n      \"primary\":{\r\n        \"Off\":\"http://cloud-3.steamusercontent.com/ugc/1750182972137668614/C48602D532FC7C6974B12FDD1B8C27CC3A9F9C32/\",\r\n        \"On\":\"http://cloud-3.steamusercontent.com/ugc/1750182972137669364/44345B2435C44D87BB88DB3673E25ED6C4CB7F92/\"\r\n      }\r\n    },\r\n    \"colors\":{\r\n      \"lighter\":\"#e74f0aff\",\r\n      \"background\":\"#353839\",\r\n      \"darker\":\"#1B1B1B\",\r\n      \"darkest\":\"#e74f0aff\",\r\n      \"highlight\":\"#e74f0aff\"\r\n    },\r\n    \"gui\":{\r\n      \"overlay\":{\r\n        \"logoWidth\":146,\r\n        \"logoHeight\":150\r\n      },\r\n      \"scoreboard\":{\r\n        \"bannerWidth\":128,\r\n        \"bannerHeight\":128,\r\n        \"width\":750,\r\n        \"primaryColumns\":3,\r\n        \"layFlat\":true\r\n      }\r\n    }\r\n  }\r\n}",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 2
    }
  },
  "MusicPlayer": {
    "RepeatSong": true,
    "PlaylistEntry": -1,
    "CurrentAudioTitle": "Ultramarines Chant",
    "CurrentAudioURL": "http://cloud-3.steamusercontent.com/ugc/773976977327440295/17C1CAA1F70F178395E93C05E55946061E695598/",
    "AudioLibrary": [
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/773976977327440295/17C1CAA1F70F178395E93C05E55946061E695598/",
        "Item2": "Ultramarines Chant"
      }
    ]
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": true,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 1.0,
    "ySize": 1.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": true,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": [
      {
        "displayed": "Objective Card",
        "normalized": "objective_card"
      },
      {
        "displayed": "Kill Team Dashboard",
        "normalized": "kill_team_dashboard"
      },
      {
        "displayed": "Kill Team Scoreboard",
        "normalized": "kill_team_scoreboard"
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 1,
    "TurnOrder": [
      "Red",
      "Blue"
    ],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "CameraStates": [
    {
      "Position": {
        "x": 0.0,
        "y": -2.5,
        "z": 0.0
      },
      "Rotation": {
        "x": 68.66522,
        "y": 89.79739,
        "z": 0.0
      },
      "Distance": 84.375,
      "Zoomed": false,
      "AbsolutePosition": {
        "x": -30.6968479,
        "y": 76.09283,
        "z": -0.108546481
      }
    },
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "DecalPallet": [],
  "LuaScript": "--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\r\n\r\nenableObjectivesDecks=true\r\n\r\nturnOrder={}\r\nnonPlaying={\"White\", \"Brown\",\"Orange\",\"Yellow\",\"Green\",\"Teal\",\"Purple\",\"Pink\" }\r\nallowMenu=true\r\nallowAutoSeat=true\r\nredPlayerID=\"\"\r\nbluePlayerID=\"\"\r\nstartMenu_GUID=\"738804\"\r\nstartMenu=nil\r\n\r\nredDiceMat_GUID=\"c57d70\"\r\nblueDiceMat_GUID=\"a84ed2\"\r\n\r\n\r\nfunction onSave()\r\n    saved_data = JSON.encode({\r\n                                svredPlayerID=redPlayerID,\r\n                                svbluePlayerID=bluePlayerID\r\n                            })\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n    Turns.enable=false\r\n    --- load vars from saved\r\n    if saved_data ~= \"\" then\r\n         local loaded_data = JSON.decode(saved_data)\r\n         redPlayerID = loaded_data.svredPlayerID\r\n         bluePlayerID = loaded_data.svbluePlayerIDs\r\n    else\r\n        redPlayerID=\"\"\r\n        bluePlayerID=\"\"\r\n    end\r\n    ---- end loading\r\n    startMenu=getObjectFromGUID(startMenu_GUID)\r\n    if allowMenu then\r\n    else\r\n        Global.UI.setAttribute(\"main\", \"active\", \"false\")\r\n    end\r\n    WebRequest.get( \"https://raw.githubusercontent.com/PhubarBCS/FTC/master/warning.json\", function(index_web) checkIfWarning(index_web) end)\r\nend\r\n\r\nfunction checkIfWarning(index_web)\r\n    local data = JSON.decode(index_web.text)\r\n    local nowIs = os.date(\"*t\", os.time())\r\n    -- TEST LINES\r\n    --data.expireDate={13,9,1020}\r\n    --print(\"EXPIRE \"..data.expireDate[1]..\" / \"..data.expireDate[2]..\" / \"..data.expireDate[3])\r\n    --print(\"NOW \"..nowIs.day..\" / \"..nowIs.month..\" / \"..nowIs.year)\r\n    if data.manualEnable then\r\n        if data.forceEnabledTo then\r\n            showRedirectFromWeb(data.message)\r\n            return\r\n        end\r\n        return\r\n    end\r\n\r\n    if (nowIs.day <= data.expireDate[1] and nowIs.month <= data.expireDate[2] and  nowIs.year <= data.expireDate[3]) then\r\n        showRedirectFromWeb(data.message)\r\n    end\r\nend\r\n\r\nfunction showRedirectFromWeb(txt)\r\n    Global.UI.setValue(\"coreRedirect\", txt)\r\n    Global.UI.setAttribute(\"main\", \"active\", \"false\")\r\n    Global.UI.setAttribute(\"redirect\", \"active\", \"true\")\r\nend\r\n\r\nfunction showRedirect()\r\n    local newMods={\r\n        {name=\"40k base map\", url=\" https://steamcommunity.com/sharedfiles/filedetails/?id=2121424734\"},\r\n        {name=\"40k army builder\", url=\" https://steamcommunity.com/sharedfiles/filedetails/?id=2121426653\"},\r\n        {name=\"Apocalypse base map:\", url=\" https://steamcommunity.com/sharedfiles/filedetails/?id=2121428591\"},\r\n        {name=\"Apocalypse army builder:\", url=\" https://steamcommunity.com/sharedfiles/filedetails/?id=2121427647\"},\r\n        {name=\"Old BCB map converter:\", url=\" https://steamcommunity.com/sharedfiles/filedetails/?id=2121425412\"}\r\n    }\r\n    local txt1=\"It also has a new name, here the new links:\\n\\n\"\r\n    local txt2=\"\"\r\n    local txt3=\"Links in the notes in the right, for copypaste.\"\r\n    for i, entry in ipairs(newMods) do\r\n        txt2=txt2..entry.name..\"\\n\"..entry.url..\"\\n\\n\"\r\n    end\r\n    txt1=\"BACON CAT BUG does not work on this mod so please dont contact him.\\nHe left.\\n\\nContact GenWilhelm, Mothman Zack, or Zyllos\\nin any of the discord servers\\nif you have any suggestion or bug report.\\n\\nThis message will stay for a while (but not too much).\"\r\n    txt2=\"\"\r\n    txt3=\"\"\r\n    --Wait.time(function() Notes.setNotes(txt2) end, 1)\r\n    Global.UI.setValue(\"coreRedirect\", txt1..txt2..txt3)\r\n    Global.UI.setAttribute(\"main\", \"active\", \"false\")\r\n    Global.UI.setAttribute(\"redirect\", \"active\", \"true\")\r\n\r\nend\r\n\r\nfunction closeRedir()\r\n    Global.UI.setAttribute(\"redirect\", \"active\", \"false\")\r\n    if allowMenu then\r\n        Global.UI.setAttribute(\"main\", \"active\", \"true\")\r\n    end\r\nend\r\n\r\n\r\nfunction autoSeatPerson(_person)\r\n    if _person.steam_id == redPlayerID then\r\n        if Player.Red.seated then\r\n            Player.Red.changeColor(\"Grey\")\r\n        end\r\n        _person.changeColor(\"Red\")\r\n        _person.team=\"None\"\r\n        return\r\n    end\r\n    if _person.steam_id == bluePlayerID then\r\n        if Player.Blue.seated then\r\n            Player.Blue.changeColor(\"Grey\")\r\n        end\r\n        _person.changeColor(\"Blue\")\r\n        _person.team=\"None\"\r\n        return\r\n    end\r\n    --_person.changeColor(\"Grey\")\r\n    _person.team=\"None\"\r\nend\r\n\r\nfunction autoSeatGroup(persons)\r\n    for i, person in ipairs(persons) do\r\n        autoSeatPerson(person)\r\n    end\r\nend\r\n\r\n\r\nfunction autoSeatAll()\r\n    if redPlayerID==\"\" or bluePlayerID==\"\" then --  if the game is not started dont autoseat\r\n        return\r\n    end\r\n    local presents = Player.getPlayers()\r\n    autoSeatGroup(presents)\r\n    presents = Player.getSpectators()\r\n    autoSeatGroup(presents)\r\nend\r\n\r\nfunction recordPlayers()\r\n    redPlayerID= Player.Red.steam_id\r\n    bluePlayerID= Player.Blue.steam_id\r\nend\r\n\r\nfunction onPlayerChangeColor(player_color)\r\n    promotePlayers()\r\n    --demotePlayers()  -- RIC\r\n    showHideRedBlueBtn()\r\nend\r\n\r\nfunction onPlayerConnect(player_id)\r\n    if allowMenu then\r\n        if allowAutoSeat and redPlayerID ~= \"\" and bluePlayerID ~= \"\" then --  if the game is not started dont autoseat\r\n                autoSeatPerson(player_id)\r\n        else\r\n        player_id.team=\"Diamonds\"\r\n        end\r\n    end\r\nend\r\n\r\nfunction promotePlayers()\r\n    local colors={\"Red\", \"Blue\", \"Orange\", \"Yellow\", \"Purple\", \"Teal\"}\r\n    for i, color in ipairs(colors) do\r\n        if Player[color].seated and  Player[color].host == false then\r\n             Player[color].promote(true)\r\n        end\r\n    end\r\nend\r\n\r\nfunction demotePlayers()\r\n    for i, color in ipairs(nonPlaying) do\r\n        if Player[color].seated  and Player[color].host == false then\r\n            Player[color].promote(false)\r\n        end\r\n    end\r\n    local spectators=Player.getSpectators()\r\n    for i, person in ipairs(spectators) do\r\n        if person.host == false then\r\n            person.promote(false)\r\n        end\r\n    end\r\nend\r\n\r\nfunction promotePlayersOnConnect()  --NOT USED\r\n    if player_color == \"Red\" or player_color == \"Blue\"  then\r\n        Player[\"Red\"].promote(true)\r\n        Player[\"Blue\"].promote(true)\r\n    end\r\nend\r\n\r\nfunction showHideRedBlueBtn()\r\n    if allowMenu then\r\n        if Player.Red.seated == true then\r\n            Global.UI.setAttribute(\"redBtn\", \"active\", \"false\")\r\n        else\r\n            Global.UI.setAttribute(\"redBtn\", \"active\", \"true\")\r\n        end\r\n        if Player.Blue.seated == true then\r\n            Global.UI.setAttribute(\"blueBtn\", \"active\", \"false\")\r\n        else\r\n            Global.UI.setAttribute(\"blueBtn\", \"active\", \"true\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction setViewForPlayer(player, color)\r\n    if color==\"Grey\" then return end\r\n    local pos= {0,0,0}\r\n    if color == \"Red\" then\r\n        pos = getObjectFromGUID(redDiceMat_GUID).getPosition()\r\n    end\r\n    if color == \"Blue\" then\r\n        pos = getObjectFromGUID(blueDiceMat_GUID).getPosition()\r\n    end\r\n    player.lookAt({\r\n        position = pos,\r\n        pitch    = 25,\r\n        yaw      = 180,\r\n        distance = 20,\r\n        })\r\nend\r\n\r\nfunction placeToColor(player, color)\r\n    player.changeColor(color)\r\n    player.team=\"None\"\r\n    --setViewForPlayer(player, color) --bugged\r\nend\r\n\r\nfunction placeToRed(player, value, id)\r\n    placeToColor(player, \"Red\")\r\n    --player.changeColor(\"Red\")\r\n    --player.team=\"None\"\r\nend\r\n\r\nfunction placeToBlue(player, value, id)\r\n    placeToColor(player, \"Blue\")\r\n    --player.changeColor(\"Blue\")\r\n    --player.team=\"None\"\r\nend\r\n\r\nfunction placeToGray(player, value, id)\r\n    placeToColor(player, \"Grey\")\r\n    --player.changeColor(\"Grey\")\r\n    --player.team=\"None\"\r\nend\r\nfunction openTerrain()\r\n    Global.UI.setAttribute(\"terrainInfo1\", \"active\", \"true\")\r\n    Global.UI.setAttribute(\"terrainInfo2\", \"active\", \"false\")\r\nend\r\nfunction page2Terrain()\r\n    Global.UI.setAttribute(\"terrainInfo1\", \"active\", \"false\")\r\n    Global.UI.setAttribute(\"terrainInfo2\", \"active\", \"true\")\r\nend\r\nfunction closeTerrain()\r\n    Global.UI.setAttribute(\"terrainInfo1\", \"active\", \"false\")\r\n    Global.UI.setAttribute(\"terrainInfo2\", \"active\", \"false\")\r\nend\r\nfunction openGame()\r\n    Global.UI.setAttribute(\"gameInfo1\", \"active\", \"true\")\r\n    Global.UI.setAttribute(\"gameInfo2\", \"active\", \"false\")\r\nend\r\nfunction page2Game()\r\n    Global.UI.setAttribute(\"gameInfo1\", \"active\", \"false\")\r\n    Global.UI.setAttribute(\"gameInfo2\", \"active\", \"true\")\r\nend\r\nfunction closeGame()\r\n    Global.UI.setAttribute(\"gameInfo1\", \"active\", \"false\")\r\n    Global.UI.setAttribute(\"gameInfo2\", \"active\", \"false\")\r\nend\r\nfunction closeMenu(player, value, id)\r\n    player.team=\"None\"\r\nend\r\n\r\nbackPosition={{0,0,0},{0,0,0},{0,0,0},{0,0,0}}\r\n\r\n",
  "LuaScriptState": "{\"svredPlayerID\":\"\"}",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->\r\n<Defaults>\r\n  <Button width=\"550\" height=\"300\" fontSize=\"40\" onClick=\"\" fontStyle=\"Bold\"/>\r\n  <Text fontSize=\"100\" color=\"#000000\" fontStyle=\"Bold\"/>\r\n</Defaults>\r\n\r\n<Panel id=\"redirect\" active=\"false\" position=\"0 0 0\" scale=\"0.6 0.6 0.6\" offsetXY=\"0 0\" color=\"White\" >\r\n  <Text offsetXY=\"0 350\" fontSize=\"80\" color=\"Red\">WARNING</Text>\r\n\r\n<Text id=\"coreRedirect\" offsetXY=\"0 0\" fontSize=\"36\">\r\n    WAIT FOR LOADING\r\n</Text>\r\n\r\n  <Button id=\"closeRedirectBtn\" active=\"true\" offsetXY=\"0 -475\"  color=\"#000000\" textColor=\"#aaaaaa\" width=\"500\" height=\"80\"  fontSize=\"30\" onClick=\"closeRedir\">CLOSE</Button>\r\n  <Text id=\"closeRedirectLbl\" active=\"true\" offsetXY=\"0 -475\" textColor=\"White\" fontSize=\"30\">\r\n  </Text>\r\n</Panel>\r\n\r\n<Panel id=\"main\" active=\"false\" position=\"0 0 0\" scale=\"0.5 0.5 0.5\" offsetXY=\"0 0\" color=\"#999999\" visibility=\"Diamonds\">\r\n  <Text offsetXY=\"0 400\">CHOOSE YOUR SEAT</Text>\r\n  <Button id=\"redBtn\" offsetXY=\"-300 100\" color=\"#bb0000\"  onClick=\"placeToRed\">Red Player</Button>\r\n  <Button id=\"blueBtn\" offsetXY=\"300 100\" color=\"#0033bb\" textColor=\"#aaaaaa\" onClick=\"placeToBlue\">Blue Player</Button>\r\n  <Text fontSize=\"45\" color=\"#bb0000\" offsetXY=\"0 -100\" >USE OTHER PLAYER COLORS AT YOUR OWN RISK !</Text>\r\n  <Button id=\"greyBtn\" offsetXY=\"0 -250\"  color=\"#666666\" width=\"1150\" height=\"200\"  onClick=\"placeToGray\">Spectator</Button>\r\n  <Button id=\"closeBtn\" offsetXY=\"0 -475\"  color=\"#000000\" textColor=\"#aaaaaa\" width=\"500\" height=\"80\"  fontSize=\"30\" onClick=\"closeMenu\">CLOSE MENU</Button>\r\n</Panel>\r\n\r\n\r\n\r\n<Panel id=\"rollDice\" active=\"true\" position=\"-635 515 0\" scale=\"0.5 0.5 0.5\" offsetXY=\"0 0\" color=\"#99999900\" visibility=\"None|Hearts|Spades\">\r\n<Text fontSize=\"25\" color=\"Grey\" offsetXY=\"0 -65\" >( SELECT A MODEL FIRST )</Text>\r\n  <Button id=\"toDiceRoller\" offsetXY=\"150 0\" color=\"Black\" textColor=\"Green\" onClick=\"goToDiceRoller\" width=\"270\" height=\"90\" fontSize=\"30\"  fontStyle=\"Bold\">TO DICE ROLLER</Button>\r\n  <Button id=\"toSquad\" offsetXY=\"-150 0\" color=\"Black\" textColor=\"Red\"  onClick=\"goToSquad\"             width=\"270\" height=\"90\" fontSize=\"30\"  fontStyle=\"Bold\">BACK TO SQUAD</Button>\r\n</Panel>\r\n\r\n<Panel id=\"passTurn\" active=\"true\" position=\"525 495 0\" scale=\"0.5 0.5 0.5\" offsetXY=\"0 0\" color=\"#99999900\" visibility=\"Black\">\r\n  <Button id=\"passTurnBtn\" offsetXY=\"0 0\" color=\"Red\" textColor=\"White\" onClick=\"nextPhase\" width=\"200\" height=\"180\" fontSize=\"35\"  fontStyle=\"Bold\"></Button>\r\n  <Text id=\"passTurnTxt\" offsetXY=\"0 0\" color=\"White\" textColor=\"White\" onClick=\"nextPhase\" width=\"180\" height=\"180\" fontSize=\"35\"  fontStyle=\"Bold\">NEXT PHASE</Text>\r\n</Panel>\r\n\r\n<Panel id=\"terrainInfo1\" active=\"false\" position=\"0 0 0\" scale=\"1 1 1\" offsetXY=\"0 0\" color=\"#999999\">\r\n <Text fontSize=\"50\" offsetXY=\"0 500\">TERRAIN BUILDER INSTRUCTIONS</Text>\r\n   <Text fontSize=\"16\" fontStyle=\"Bold\">This tool is made to prepare terrain for the Forty Thousand Collection Template v2.0 or later versions but works with other templates too if the gaming mat position is 0,0,0 .\r\n\r\n\r\nPREPARING THE TERRAIN:\r\n\r\nPrepare your terrain as you like, be sure that all elements are tolally inside the gaming mat, no parts have to be outside.\r\n\r\nThe battlemat is a modified \"Flex Table\" (by MrStump) with fixed dimensions. You can change the mat background by clicking on the white button on one of the legs and paste the URL of the image.\r\nYou can store some URL in memory by adding them individually so you can recall them easily.\r\nYou dont need anymore to edit the mat image to fit the bigger dimension of the table, only the gaming area will change, not the entire table.\r\nThere are some preset mats, so you already have something to work with, but feel free to use any URL that you like.\r\n\r\nWhen the terrain and the mat are ready, press the \"EXTRACT TERRAIN\" button present in the table control menu and confirm.\r\nYou will then have a map only with the terrain features and a blue brick that is a service token used to store the URL of the mat image. This brick is invisible and not interactable but it has its own menu that will display when loading the terrain.\r\n\r\nAll outside the gaming mat will be deleted.\r\n\r\nSave then the map in another local savefile or upload it to the workshop.\r\n\r\nThe \"DELETE TERRAIN\" button deletes all but the table inside the gaming area, useful for starting from scratch.\r\n\r\nLOADING THE TERRAIN:\r\n\r\nOpen the gaming template then make an ADDITIVE LOAD of the terrain map saved or present in the workshop.\r\n\r\nThe terrain will be put on the gaming mat and the mat image will change automatically.\r\nIn case it doesnt works you can copy the URL and apply it manually using the \"Flex Table\" menu.\r\n\r\nWhen done you can erease the menu showing the saved URL by clicking the proper button. It's NOT reversible.\r\n\r\nHave fun!</Text>\r\n  <Button id=\"closeBtnT\" offsetXY=\"0 -500\"  color=\"#000000\" textColor=\"#aaaaaa\" width=\"180\" height=\"60\"  fontSize=\"30\" onClick=\"closeTerrain\">CLOSE</Button>\r\n\r\n</Panel>\r\n\r\n\r\n<Panel id=\"gameInfo1\" active=\"false\" position=\"0 0 0\" scale=\"1 1 1\" offsetXY=\"0 0\" color=\"#999999\">\r\n\r\n <Text fontSize=\"50\" offsetXY=\"0 500\">GAMING INSTRUCTIONS AND IMPROVEMENTS</Text>\r\n   <Text fontSize=\"16\" fontStyle=\"Bold\">The battle mat is a modified \"Flex Table\" (by MrStump) with fixed dimensions. You can change the background of the mat by clicking on the white button on one of the legs and paste the URL of the image.\r\n\r\n   You can store URLs in memory by adding them individually so you can recall them easily if you want to make a local version with stored images.\r\n   An improvement in version 2 is that you now only need to provide the image of the battle mat itself, you donâ€™t need to edit a massive image containing the felt part. For best results, use an image with the correct ratio!\r\n\r\n   Objective markers have a 3\" sphere state so you can easily check range. The number of the objective is shown even in that state, by clicking on the button it will go back to state one. The tokens also have a generic back for hidden objectives, you can switch to the sphere mode too but in that case no number will be displayed.\r\n\r\n   To roll dice simply drop them into the small cardboard box, it will roll them and place them in order on the rolling mat. It supports both d6 and d12.\r\n   The rolling mat will display the results along with the total dice rolled.\r\n   Also present buttons to spawn dice of 4 colors, to grab them to roll them, to clear the mat. Near each row of dice are present buttons to delete or select dice rows, left click affects only that row, right click affects that row plus all the lower (-) . To change to upper (+) selection click on the \" - / + \" button, the change is for the next click only.\r\n   Use the description of the small box to change your preferences and the behavior of the tool.\r\n\r\n   You can find a set of useful generic tokens at the head of the table, copy them and use them as you see fit.\r\n\r\n   Activation tokens: an interactive token can be placed near each squad to keep trak of which one has acted in each phase. \"Green\" means that the squad has to act, \"Red\" that it has already acted.\r\n   To change the state just click on the coloured button. All the tokens are reset automatically at each phase/turn change. You can manually reset them by clicking on any \"Reset Activation tokens\" button.\r\n   With the token selected you can use the Numpad1 and Numpad2 to lower/rise the position of the button.\r\n\r\n   Wound trackers: an interactive token can be placed near each model to keep track of its remaining wounds. To reduce the number left click on the button, to increase it right click.\r\n   With the token selected you can use the Numpad1 and Numpad2 to lower/rise the position of the button.\r\n\r\n   The counters are self explanatory, the players turn and the game turn ones are automatic, you don't need to update the manually. The victory ones will reflect the value of the ITC Score sheet if you use it.\r\n\r\n   Added infinite bags of d3, d6 and d12.\r\n\r\n   When loading a save file of a started game, the players will be automatically placed in the seats they had when started to play.\r\n\r\n   The action cameras are for fun only, you can see what a mini see!\r\n\r\n\r\n   SETTING UP THE GAME\r\n\r\n   When loading or connecting choose your seat in the shown menu.\r\n\r\n   Additive load a terrain save file for FTC Gaming Template v2.0 or above, the map and the mat background will be placed. Confirm it or remove if you want to change with another map.\r\n   In the table control menu there is a button tho erease all but the table in the gaming area, in case you wrongly confirmed. This button erease already placed armies nad other things too.\r\n   You can make those save files with the Terrain Generator feature in this map. Check the relative instructions.\r\n\r\n   Each player can spawn his or her own Objective Deck, Psychic Power Deck and Special Token Bag by clicking the button on the relative area and choosing from the menu. You can change them multiple times and when you are done confirm each item.\r\n   The Tactical Objective cards should snap in position and rotation onto the \"Discard\" slot. The hands are in the middle so you can draw cards from deck easily.\r\n\r\n   You can then import your army. If you import one made with the FTC Army Builder v2.0 or above (you can find it in the workshop) just additive load the save file and use the buttons to place the army on your side or remove it if you want to change it. Make sure that nobody loads a new army until the previous one is placed or deleted to prevent physics spaz.\r\n\r\n   Use the menu on the top of the gaming mat to place the chosen deployment areas and if needed the ITC Objectives for the chosen Scenario.\r\n\r\n\r\n    STARTING THE GAME instruction on next page!\r\n\r\n</Text>\r\n  <Button id=\"closeBtnT\" offsetXY=\"0 -500\"  color=\"#000000\" textColor=\"#aaaaaa\" width=\"180\" height=\"60\"  fontSize=\"30\" onClick=\"closeGame\">CLOSE</Button>\r\n  <Button id=\"page1BtnT\" offsetXY=\"200 -500\"  color=\"#000000\" textColor=\"#aaaaaa\" width=\"180\" height=\"60\"  fontSize=\"30\" onClick=\"page2Game\">PAGE 2</Button>\r\n</Panel>\r\n<Panel id=\"gameInfo2\" active=\"false\" position=\"0 0 0\" scale=\"1 1 1\" offsetXY=\"0 0\" color=\"#999999\">\r\n <Text fontSize=\"50\" offsetXY=\"0 500\">GAMING INSTRUCTIONS AND IMPROVEMENTS</Text>\r\n   <Text fontSize=\"16\" fontStyle=\"Bold\">\r\n      STARTING THE GAME\r\n\r\n      Deploy the armies as per the rules for the mission you are playing..\r\n\r\n      Select the starting player with the toggle button and when you are ready start the game with the relative button. Turns will be automatically enabled in the chosen order.\r\n\r\n      During game you can recall the selected deployment zones and the range checkers by clicking on the relative buttons placed near the top of battle mat.\r\n      You also can use buttons on upper left to go easily to dice roller and back (select a model first to go back to it)\r\n\r\n      At the start of the 6th and 7th turn you will receive a warning for checking if the game ends or not. Make your choice with the buttons that will spawn around the turn counter.  At the start of 8th turn you will be notified that the game is over.\r\n\r\n      You can save and load your game at any point of the game or setup. In case of bugs simply let Gen Wilhelm, Mothman Zack or Zyllos know and it will be dealt with as soon as possible\r\n  </Text>\r\n  <Button id=\"closeBtnT\" offsetXY=\"0 -500\"  color=\"#000000\" textColor=\"#aaaaaa\" width=\"180\" height=\"60\"  fontSize=\"30\" onClick=\"closeGame\">CLOSE</Button>\r\n   <Button id=\"page1BtnT\" offsetXY=\"-200 -500\"  color=\"#000000\" textColor=\"#aaaaaa\" width=\"180\" height=\"60\"  fontSize=\"30\" onClick=\"openGame\">PAGE 1</Button>\r\n</Panel>",
  "CustomUIAssets": [
    {
      "Name": "initiativeOff",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1750182972143392609/48283228AFC1906F43CD6D39A402B3DC29EAE371/"
    },
    {
      "Name": "initiativeOn",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1750182972143393402/5BE39A862B6C1F71A467892906E21C0CD54C257E/"
    },
    {
      "Name": "primaryOff",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1750182972137668614/C48602D532FC7C6974B12FDD1B8C27CC3A9F9C32/"
    },
    {
      "Name": "primaryOn",
      "URL": "http://cloud-3.steamusercontent.com/ugc/1750182972137669364/44345B2435C44D87BB88DB3673E25ED6C4CB7F92/"
    }
  ],
  "ObjectStates": [
    {
      "GUID": "f7d85a",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 1.00000048,
        "posZ": 37.5,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "731345",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -1.07731394E-05,
        "posY": 1.00000048,
        "posZ": -37.5,
        "rotX": 0.0,
        "rotY": -4.00605277E-05,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "309cea",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.3036015
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.128999949,
        "g": 0.694,
        "b": 0.606999934,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Teal",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f9d618",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.31500161,
        "scaleY": 1.29675269,
        "scaleZ": 1.303601
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a47132",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.55,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315005,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f7cd38",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c5e288",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -38.0,
        "posY": -0.53,
        "posZ": 0.0,
        "rotX": -1.41732551E-06,
        "rotY": -0.00152179354,
        "rotZ": 7.397896E-06,
        "scaleX": 2.0,
        "scaleY": 2.0,
        "scaleZ": 2.0
      },
      "Nickname": "Mat url",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.201567829,
        "b": 0.8235294
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "-- FTC-GUID: c5e288\r\nkeepForTerrainEditor = true\r\n\r\nlightEquatorColor = {}\r\nlightGroundColor = {}\r\nlightSkyColor = {}\r\nlightColor = {}\r\nmanageLighting=true\r\nfunction refreshSurface()\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\nend\r\n\r\nfunction onSave()\r\n    local data =  {}\r\n    if manageLighting then\r\n        data={\r\n                    link=url,\r\n                    svlightEquatorColor = lightEquatorColor,\r\n                    svlightGroundColor = lightGroundColor,\r\n                    svlightSkyColor = lightSkyColor,\r\n                    svlightColor = lightColor,\r\n                    svlightAmbientType= lightAmbientType,\r\n                    svlightAmbientIntensity = lightAmbientIntensity,\r\n                    svlightLightIntensity = lightLightIntensity,\r\n                    svlightReflectionIntesity = lightReflectionIntesity,\r\n                    }\r\n    else\r\n        data={link=url}\r\n    end\r\n\r\n    saved_data = JSON.encode(data)\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n\r\n    self.setInvisibleTo({})\r\n    self.interactable=true\r\n    if saved_data ~= \"\" then\r\n         local loaded_data = JSON.decode(saved_data)\r\n         url = loaded_data.link\r\n         lightEquatorColor = loaded_data.svlightEquatorColor\r\n         lightGroundColor = loaded_data.svlightGroundColor\r\n         lightSkyColor = loaded_data.svlightSkyColor\r\n         lightColor = loaded_data.svlightColor\r\n         lightAmbientType= loaded_data.svlightAmbientType\r\n         lightAmbientIntensity = loaded_data.svlightAmbientIntensity\r\n         lightLightIntensity = loaded_data.svlightLightIntensity\r\n         lightReflectionIntesity = loaded_data.svlightReflectionIntesity\r\n    else\r\n         url ='No url'\r\n         lightEquatorColor = {}\r\n         lightGroundColor = {}\r\n         lightSkyColor = {}\r\n         lightColor = {}\r\n         lightAmbientType= nil\r\n         lightAmbientIntensity = nil\r\n         lightLightIntensity = nil\r\n         lightReflectionIntesity = nil\r\n    end\r\n\r\n    flexControl = getObjectFromGUID('bd69bd')\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\n    Xoffset=2\r\n    Yoffset=3\r\n    if obj_surface ~= nil and obj_surface.getVar(\"version\")>= 2.0 then\r\n        Wait.frames(changeMat ,5)\r\n    end\r\n    Wait.frames(createUI, 30)\r\n\r\nend\r\n\r\nfunction createUI()\r\n    createTitleButton()\r\n    createDisplay()\r\n    --createSetButton()\r\n    createRewriteButton()\r\n    createDeleteButton()\r\n    createWarningButton()\r\n    if obj_surface == nil then\r\n        broadcastToAll(\"THIS TERRAIN IS MEANT TO BE USED WITH BCB BASE MAP V2.0+\\nLoad BCB base map and additive load this one.\", \"Orange\")\r\n    end\r\nend\r\n\r\nfunction createWarningButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'none'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = \"THIS TERRAIN IS MEANT TO BE USED WITH BCB BASE MAP V2.0+\\nLoad BCB base map and additive load this one.\"\r\n    button_parameters.position = {7.5+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 0\r\n    button_parameters.height = 0\r\n    button_parameters.font_size = 200\r\n    button_parameters.color = 'Black'\r\n    button_parameters.font_color = 'Orange'\r\n    button_parameters.tooltip=\"\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createTitleButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'none'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = \"Copy/paste the link below to load the mat image \\n (for BCB v2.0 template it's automatic)\"\r\n    button_parameters.position = {0+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 4400\r\n    button_parameters.height = 800\r\n    button_parameters.font_size = 200\r\n    button_parameters.color = 'Black'\r\n    button_parameters.font_color = 'White'\r\n    button_parameters.tooltip=\"\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createDisplay()\r\n    self.createInput({\r\n        label='', input_function=\"none\", function_owner=self,\r\n        alignment=3, position={1.5+Xoffset,Yoffset,0}, rotation = {0,270,0}, height=400, width= string.len(url)*160,\r\n        font_size=300, tooltip=\"\",\r\n        value= url\r\n    })\r\nend\r\n\r\nfunction createSetButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'changeMat'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'SET \\n if autoset didnt worked \\n (for BCB v2.0 template)'\r\n    button_parameters.position = {3.2+Xoffset,Yoffset,3}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 3000\r\n    button_parameters.height = 800\r\n    button_parameters.font_size = 200\r\n    button_parameters.tooltip=\"Auto set\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createRewriteButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'rewriteUrl'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'SHOW AGAIN URL \\n (in case things went wrong)'\r\n    button_parameters.position = {3.2+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 2600\r\n    button_parameters.height = 800\r\n    button_parameters.font_size = 200\r\n    button_parameters.tooltip=\"Show again\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createDeleteButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'erease'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Erease this tool \\n when done \\n (can not undo!)'\r\n    button_parameters.position = {5.7+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 1200\r\n    button_parameters.font_size = 200\r\n    button_parameters.color = 'Black'\r\n    button_parameters.font_color = 'Red'\r\n    button_parameters.tooltip=\"Erease\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction retriveUrl()\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\n    url = obj_surface.getCustomObject().diffuse\r\n    rewriteUrl()\r\n    lightEquatorColor = Lighting.getAmbientEquatorColor()\r\n    lightEquatorColor= {r=lightEquatorColor.r, g=lightEquatorColor.g, b=lightEquatorColor.b}\r\n    lightGroundColor = Lighting.getAmbientGroundColor()\r\n    lightGroundColor= {r=lightGroundColor.r, g=lightGroundColor.g, b=lightGroundColor.b}\r\n    lightSkyColor = Lighting.getAmbientSkyColor()\r\n    lightSkyColor= {r=lightSkyColor.r, g=lightSkyColor.g, b=lightSkyColor.b}\r\n    lightColor = Lighting.getLightColor()\r\n    lightColor= {r=lightColor.r, g=lightColor.g, b=lightColor.b}\r\n    lightAmbientType= Lighting.ambient_type\r\n    lightAmbientIntensity = Lighting.ambient_intensity\r\n    lightLightIntensity = Lighting.light_intensity\r\n    lightReflectionIntesity = Lighting.reflection_intensity\r\nend\r\n\r\nfunction rewriteUrl()\r\n    self.editInput({index=0, value=url})\r\n    self.editInput({index=0, width= string.len(url)*160})\r\n    self.setDescription(\"\")\r\nend\r\n\r\nfunction changeMat(new)\r\n    if url ~= \"\" and url ~= \"No url\" and flexControl ~= nil then\r\n        closeMenu()\r\n        flexControl.call('setControlF')\r\n        Wait.frames(updateSurfaceMat, 5)\r\n    else\r\n        if self.getDescription()==\"\" then\r\n            broadcastToAll(\"Invalid URL or no table\", \"Red\")\r\n        end\r\n    end\r\n    setLighting()\r\nend\r\n\r\nfunction setLighting()\r\n    if manageLighting == false then\r\n        return\r\n    end\r\n    if lightEquatorColor ~= nil then\r\n        Lighting.setAmbientEquatorColor(lightEquatorColor)\r\n    end\r\n    if lightGroundColor ~= nil then\r\n        Lighting.setAmbientGroundColor(lightGroundColor)\r\n    end\r\n    if lightSkyColor ~= nil then\r\n        Lighting.setAmbientSkyColor(lightSkyColor)\r\n    end\r\n    if lightColor ~= nil then\r\n        Lighting.setLightColor(lightColor)\r\n    end\r\n    if lightAmbientType ~= nil then\r\n        Lighting.ambient_type = lightAmbientType\r\n    end\r\n    if lightAmbientIntensity ~= nil then\r\n        Lighting.ambient_intensity = lightAmbientIntensity\r\n    end\r\n    if lightLightIntensity ~= nil then\r\n        Lighting.light_intensity = lightLightIntensity\r\n    end\r\n    if lightReflectionIntesity ~= nil then\r\n        Lighting.reflection_intensity = lightReflectionIntesity\r\n    end\r\n    Lighting.apply()\r\nend\r\n\r\n\r\nfunction setInputValues()\r\n    flexControl.editInput( {index=0, value=\"\"})\r\n    flexControl.editInput( {index=1, value=url})\r\nend\r\n\r\nfunction updateSurfaceMat()\r\n    local newUrl=url\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\n    local matDebugObject=nil\r\n    for i,obj in ipairs(getAllObjects()) do\r\n        if obj.getName()== \"Mat url debug\" then matDebugObject=obj end\r\n    end\r\n    if matDebugObject then\r\n        local customInfoDebug = matDebugObject.getCustomObject()\r\n        if customInfoDebug.diffuse ~= \"\" then\r\n            newUrl= customInfoDebug.diffuse\r\n            --print(\"USING DEBUUG MAT\")\r\n            matDebugObject.destroy()\r\n        else\r\n            --print(\"USING INTERNAL VARIABLE MAT\")\r\n        end\r\n    end\r\n    local customInfo = obj_surface.getCustomObject()\r\n    customInfo.diffuse = newUrl\r\n    obj_surface.setCustomObject(customInfo)\r\n    obj_surface = obj_surface.reload()\r\n    Wait.frames(erease, 5)\r\nend\r\n\r\nfunction closeMenu()\r\n    flexControl.clearButtons()\r\n    flexControl.clearInputs()\r\n    flexControl.call('createOpenCloseButton')\r\nend\r\n\r\nfunction erease()\r\n    if obj_surface then\r\n        obj_surface.call(\"showMenu\")\r\n        obj_surface.interactable=false\r\n    end\r\n    self.destroy()\r\nend\r\n\r\nfunction none()\r\nend\r\n",
      "LuaScriptState": "{\"link\":\"http://cloud-3.steamusercontent.com/ugc/849339809539332522/5289A4E95F8A2C03C1CD552D9A0A4CC98BEEBE44/\",\"svlightAmbientIntensity\":1.29999995231628,\"svlightAmbientType\":1,\"svlightColor\":{\"b\":0.890200018882751,\"g\":0.980400025844574,\"r\":1},\"svlightEquatorColor\":{\"b\":0.5,\"g\":0.5,\"r\":0.5},\"svlightGroundColor\":{\"b\":0.5,\"g\":0.5,\"r\":0.5},\"svlightLightIntensity\":0.540000021457672,\"svlightReflectionIntesity\":1,\"svlightSkyColor\":{\"b\":0.5,\"g\":0.5,\"r\":0.5}}",
      "XmlUI": ""
    },
    {
      "GUID": "0445dd",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 1.00000048,
        "posZ": 37.5,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4fa8d7",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -1.07731394E-05,
        "posY": 1.00000048,
        "posZ": -37.5,
        "rotX": 0.0,
        "rotY": -4.00605277E-05,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "7c75e0",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.3036015
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.128999949,
        "g": 0.694,
        "b": 0.606999934,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Teal",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f83579",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.31500161,
        "scaleY": 1.29675269,
        "scaleZ": 1.303601
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2487b6",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.55,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315005,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c02f38",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d867cb",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 1.00000048,
        "posZ": 37.5,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a5071d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -1.07731394E-05,
        "posY": 1.00000048,
        "posZ": -37.5,
        "rotX": 0.0,
        "rotY": -4.00605277E-05,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "fa045d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.3036015
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.128999949,
        "g": 0.694,
        "b": 0.606999934,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Teal",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "6f6fb5",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.31500161,
        "scaleY": 1.29675269,
        "scaleZ": 1.303601
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "158873",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.55,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315005,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "fd8d83",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "034ec3",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.0,
        "posY": -9.52,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 0.83,
        "scaleY": 1.0,
        "scaleZ": 0.61
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796176/4A5A65543B98BCFBF57E910D06EC984208223D38/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/849339809539332522/5289A4E95F8A2C03C1CD552D9A0A4CC98BEEBE44/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5a0065",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 1.00000048,
        "posZ": 37.5,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c4477d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -1.07731394E-05,
        "posY": 1.00000048,
        "posZ": -37.5,
        "rotX": 0.0,
        "rotY": -4.00605277E-05,
        "rotZ": 0.0,
        "scaleX": 38.135006,
        "scaleY": 9.077269,
        "scaleZ": 7.8216
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b83121",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.3036015
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.128999949,
        "g": 0.694,
        "b": 0.606999934,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Teal",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "04f3c7",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.49999976,
        "posZ": -88.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.31500161,
        "scaleY": 1.29675269,
        "scaleZ": 1.303601
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3f5189",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -30.0000038,
        "posY": 1.55,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315005,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5fa3ed",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -40.0,
        "posY": 1.49999976,
        "posZ": 88.0,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "74dce1",
      "Name": "BlockRectangle",
      "Transform": {
        "posX": -38.0,
        "posY": -0.53,
        "posZ": 0.0,
        "rotX": -1.41732551E-06,
        "rotY": -0.00152179354,
        "rotZ": 7.397896E-06,
        "scaleX": 2.0,
        "scaleY": 2.0,
        "scaleZ": 2.0
      },
      "Nickname": "Mat url",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.201567829,
        "b": 0.8235294
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "-- FTC-GUID: c5e288\r\nkeepForTerrainEditor = true\r\n\r\nlightEquatorColor = {}\r\nlightGroundColor = {}\r\nlightSkyColor = {}\r\nlightColor = {}\r\nmanageLighting=true\r\nfunction refreshSurface()\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\nend\r\n\r\nfunction onSave()\r\n    local data =  {}\r\n    if manageLighting then\r\n        data={\r\n                    link=url,\r\n                    svlightEquatorColor = lightEquatorColor,\r\n                    svlightGroundColor = lightGroundColor,\r\n                    svlightSkyColor = lightSkyColor,\r\n                    svlightColor = lightColor,\r\n                    svlightAmbientType= lightAmbientType,\r\n                    svlightAmbientIntensity = lightAmbientIntensity,\r\n                    svlightLightIntensity = lightLightIntensity,\r\n                    svlightReflectionIntesity = lightReflectionIntesity,\r\n                    }\r\n    else\r\n        data={link=url}\r\n    end\r\n\r\n    saved_data = JSON.encode(data)\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n\r\n    self.setInvisibleTo({})\r\n    self.interactable=true\r\n    if saved_data ~= \"\" then\r\n         local loaded_data = JSON.decode(saved_data)\r\n         url = loaded_data.link\r\n         lightEquatorColor = loaded_data.svlightEquatorColor\r\n         lightGroundColor = loaded_data.svlightGroundColor\r\n         lightSkyColor = loaded_data.svlightSkyColor\r\n         lightColor = loaded_data.svlightColor\r\n         lightAmbientType= loaded_data.svlightAmbientType\r\n         lightAmbientIntensity = loaded_data.svlightAmbientIntensity\r\n         lightLightIntensity = loaded_data.svlightLightIntensity\r\n         lightReflectionIntesity = loaded_data.svlightReflectionIntesity\r\n    else\r\n         url ='No url'\r\n         lightEquatorColor = {}\r\n         lightGroundColor = {}\r\n         lightSkyColor = {}\r\n         lightColor = {}\r\n         lightAmbientType= nil\r\n         lightAmbientIntensity = nil\r\n         lightLightIntensity = nil\r\n         lightReflectionIntesity = nil\r\n    end\r\n\r\n    flexControl = getObjectFromGUID('bd69bd')\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\n    Xoffset=2\r\n    Yoffset=3\r\n    if obj_surface ~= nil and obj_surface.getVar(\"version\")>= 2.0 then\r\n        Wait.frames(changeMat ,5)\r\n    end\r\n    Wait.frames(createUI, 30)\r\n\r\nend\r\n\r\nfunction createUI()\r\n    createTitleButton()\r\n    createDisplay()\r\n    --createSetButton()\r\n    createRewriteButton()\r\n    createDeleteButton()\r\n    createWarningButton()\r\n    if obj_surface == nil then\r\n        broadcastToAll(\"THIS TERRAIN IS MEANT TO BE USED WITH BCB BASE MAP V2.0+\\nLoad BCB base map and additive load this one.\", \"Orange\")\r\n    end\r\nend\r\n\r\nfunction createWarningButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'none'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = \"THIS TERRAIN IS MEANT TO BE USED WITH BCB BASE MAP V2.0+\\nLoad BCB base map and additive load this one.\"\r\n    button_parameters.position = {7.5+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 0\r\n    button_parameters.height = 0\r\n    button_parameters.font_size = 200\r\n    button_parameters.color = 'Black'\r\n    button_parameters.font_color = 'Orange'\r\n    button_parameters.tooltip=\"\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createTitleButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'none'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = \"Copy/paste the link below to load the mat image \\n (for BCB v2.0 template it's automatic)\"\r\n    button_parameters.position = {0+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 4400\r\n    button_parameters.height = 800\r\n    button_parameters.font_size = 200\r\n    button_parameters.color = 'Black'\r\n    button_parameters.font_color = 'White'\r\n    button_parameters.tooltip=\"\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createDisplay()\r\n    self.createInput({\r\n        label='', input_function=\"none\", function_owner=self,\r\n        alignment=3, position={1.5+Xoffset,Yoffset,0}, rotation = {0,270,0}, height=400, width= string.len(url)*160,\r\n        font_size=300, tooltip=\"\",\r\n        value= url\r\n    })\r\nend\r\n\r\nfunction createSetButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'changeMat'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'SET \\n if autoset didnt worked \\n (for BCB v2.0 template)'\r\n    button_parameters.position = {3.2+Xoffset,Yoffset,3}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 3000\r\n    button_parameters.height = 800\r\n    button_parameters.font_size = 200\r\n    button_parameters.tooltip=\"Auto set\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createRewriteButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'rewriteUrl'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'SHOW AGAIN URL \\n (in case things went wrong)'\r\n    button_parameters.position = {3.2+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 2600\r\n    button_parameters.height = 800\r\n    button_parameters.font_size = 200\r\n    button_parameters.tooltip=\"Show again\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction createDeleteButton()\r\n    button_parameters = {}\r\n    button_parameters.click_function = 'erease'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Erease this tool \\n when done \\n (can not undo!)'\r\n    button_parameters.position = {5.7+Xoffset,Yoffset,0}\r\n    button_parameters.rotation = {0,270,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 1200\r\n    button_parameters.font_size = 200\r\n    button_parameters.color = 'Black'\r\n    button_parameters.font_color = 'Red'\r\n    button_parameters.tooltip=\"Erease\"\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction retriveUrl()\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\n    url = obj_surface.getCustomObject().diffuse\r\n    rewriteUrl()\r\n    lightEquatorColor = Lighting.getAmbientEquatorColor()\r\n    lightEquatorColor= {r=lightEquatorColor.r, g=lightEquatorColor.g, b=lightEquatorColor.b}\r\n    lightGroundColor = Lighting.getAmbientGroundColor()\r\n    lightGroundColor= {r=lightGroundColor.r, g=lightGroundColor.g, b=lightGroundColor.b}\r\n    lightSkyColor = Lighting.getAmbientSkyColor()\r\n    lightSkyColor= {r=lightSkyColor.r, g=lightSkyColor.g, b=lightSkyColor.b}\r\n    lightColor = Lighting.getLightColor()\r\n    lightColor= {r=lightColor.r, g=lightColor.g, b=lightColor.b}\r\n    lightAmbientType= Lighting.ambient_type\r\n    lightAmbientIntensity = Lighting.ambient_intensity\r\n    lightLightIntensity = Lighting.light_intensity\r\n    lightReflectionIntesity = Lighting.reflection_intensity\r\nend\r\n\r\nfunction rewriteUrl()\r\n    self.editInput({index=0, value=url})\r\n    self.editInput({index=0, width= string.len(url)*160})\r\n    self.setDescription(\"\")\r\nend\r\n\r\nfunction changeMat(new)\r\n    if url ~= \"\" and url ~= \"No url\" and flexControl ~= nil then\r\n        closeMenu()\r\n        flexControl.call('setControlF')\r\n        Wait.frames(updateSurfaceMat, 5)\r\n    else\r\n        if self.getDescription()==\"\" then\r\n            broadcastToAll(\"Invalid URL or no table\", \"Red\")\r\n        end\r\n    end\r\n    setLighting()\r\nend\r\n\r\nfunction setLighting()\r\n    if manageLighting == false then\r\n        return\r\n    end\r\n    if lightEquatorColor ~= nil then\r\n        Lighting.setAmbientEquatorColor(lightEquatorColor)\r\n    end\r\n    if lightGroundColor ~= nil then\r\n        Lighting.setAmbientGroundColor(lightGroundColor)\r\n    end\r\n    if lightSkyColor ~= nil then\r\n        Lighting.setAmbientSkyColor(lightSkyColor)\r\n    end\r\n    if lightColor ~= nil then\r\n        Lighting.setLightColor(lightColor)\r\n    end\r\n    if lightAmbientType ~= nil then\r\n        Lighting.ambient_type = lightAmbientType\r\n    end\r\n    if lightAmbientIntensity ~= nil then\r\n        Lighting.ambient_intensity = lightAmbientIntensity\r\n    end\r\n    if lightLightIntensity ~= nil then\r\n        Lighting.light_intensity = lightLightIntensity\r\n    end\r\n    if lightReflectionIntesity ~= nil then\r\n        Lighting.reflection_intensity = lightReflectionIntesity\r\n    end\r\n    Lighting.apply()\r\nend\r\n\r\n\r\nfunction setInputValues()\r\n    flexControl.editInput( {index=0, value=\"\"})\r\n    flexControl.editInput( {index=1, value=url})\r\nend\r\n\r\nfunction updateSurfaceMat()\r\n    local newUrl=url\r\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\r\n    local matDebugObject=nil\r\n    for i,obj in ipairs(getAllObjects()) do\r\n        if obj.getName()== \"Mat url debug\" then matDebugObject=obj end\r\n    end\r\n    if matDebugObject then\r\n        local customInfoDebug = matDebugObject.getCustomObject()\r\n        if customInfoDebug.diffuse ~= \"\" then\r\n            newUrl= customInfoDebug.diffuse\r\n            --print(\"USING DEBUUG MAT\")\r\n            matDebugObject.destroy()\r\n        else\r\n            --print(\"USING INTERNAL VARIABLE MAT\")\r\n        end\r\n    end\r\n    local customInfo = obj_surface.getCustomObject()\r\n    customInfo.diffuse = newUrl\r\n    obj_surface.setCustomObject(customInfo)\r\n    obj_surface = obj_surface.reload()\r\n    Wait.frames(erease, 5)\r\nend\r\n\r\nfunction closeMenu()\r\n    flexControl.clearButtons()\r\n    flexControl.clearInputs()\r\n    flexControl.call('createOpenCloseButton')\r\nend\r\n\r\nfunction erease()\r\n    if obj_surface then\r\n        obj_surface.call(\"showMenu\")\r\n        obj_surface.interactable=false\r\n    end\r\n    self.destroy()\r\nend\r\n\r\nfunction none()\r\nend\r\n",
      "LuaScriptState": "{\"link\":\"\",\"svlightAmbientIntensity\":1.29999995231628,\"svlightAmbientType\":1,\"svlightColor\":{\"b\":0.890200018882751,\"g\":0.980400025844574,\"r\":1},\"svlightEquatorColor\":{\"b\":0.5,\"g\":0.5,\"r\":0.5},\"svlightGroundColor\":{\"b\":0.5,\"g\":0.5,\"r\":0.5},\"svlightLightIntensity\":0.540000021457672,\"svlightReflectionIntesity\":1,\"svlightSkyColor\":{\"b\":0.5,\"g\":0.5,\"r\":0.5}}",
      "XmlUI": ""
    },
    {
      "GUID": "157e51",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.7198876,
        "posZ": -3.98000216,
        "rotX": 5.19637E-06,
        "rotY": 90.00012,
        "rotZ": 8.818638E-06,
        "scaleX": 0.950000048,
        "scaleY": 0.950000048,
        "scaleZ": 0.950000048
      },
      "Nickname": "Domination Terrain",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.3647029,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"02029a\":{\"lock\":true,\"pos\":{\"x\":-7.6978,\"y\":0.9727,\"z\":-6.2516},\"rot\":{\"x\":0,\"y\":359.9893,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"06c4e8\":{\"lock\":true,\"pos\":{\"x\":7.2632,\"y\":0.9727,\"z\":6.1846},\"rot\":{\"x\":0,\"y\":179.9921,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"1bbaa2\":{\"lock\":true,\"pos\":{\"x\":-1.2184,\"y\":0.9513,\"z\":-7.7394},\"rot\":{\"x\":359.8338,\"y\":0.0159,\"z\":359.9774},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2857b3\":{\"lock\":true,\"pos\":{\"x\":11.0792,\"y\":0.9656,\"z\":1.6432},\"rot\":{\"x\":0,\"y\":254.9874,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-21.8764,\"y\":0.9,\"z\":21.6475},\"rot\":{\"x\":0,\"y\":269.9897,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"481a19\":{\"lock\":true,\"pos\":{\"x\":-1.8264,\"y\":0.961,\"z\":5.6857},\"rot\":{\"x\":0.169,\"y\":315.0657,\"z\":359.9028},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5aac3b\":{\"lock\":true,\"pos\":{\"x\":10.1875,\"y\":0.9622,\"z\":-7.865},\"rot\":{\"x\":0.2319,\"y\":0.0351,\"z\":0.039},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6362cc\":{\"lock\":true,\"pos\":{\"x\":-0.1572,\"y\":0.9681,\"z\":-0.2397},\"rot\":{\"x\":0.0062,\"y\":0.0053,\"z\":0.1217},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b55803\":{\"lock\":true,\"pos\":{\"x\":-13.0694,\"y\":0.9638,\"z\":-0.9675},\"rot\":{\"x\":0.0588,\"y\":269.9899,\"z\":0.213},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b80052\":{\"lock\":true,\"pos\":{\"x\":-8.154,\"y\":0.9703,\"z\":4.3355},\"rot\":{\"x\":0.0001,\"y\":90.0502,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"fe1e3b\":{\"lock\":true,\"pos\":{\"x\":6.9033,\"y\":0.9703,\"z\":-3.9107},\"rot\":{\"x\":0,\"y\":269.9542,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "02029a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -7.6978,
            "posY": 0.9727,
            "posZ": -6.2516,
            "rotX": 0.0,
            "rotY": 359.989258,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "06c4e8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.2632,
            "posY": 0.9727,
            "posZ": 6.1846,
            "rotX": 0.0,
            "rotY": 179.9921,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "1bbaa2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -1.2184,
            "posY": 0.9513,
            "posZ": -7.7394,
            "rotX": 359.8338,
            "rotY": 0.0159,
            "rotZ": 359.9774,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2857b3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 11.0792,
            "posY": 0.9656,
            "posZ": 1.6432,
            "rotX": 0.0,
            "rotY": 254.987366,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -21.8764,
            "posY": 0.9799205,
            "posZ": 21.6475,
            "rotX": 1.17798686E-06,
            "rotY": 269.9897,
            "rotZ": -7.998444E-08,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 66,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "481a19",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -1.8264,
            "posY": 0.961,
            "posZ": 5.6857,
            "rotX": 0.169000015,
            "rotY": 315.0657,
            "rotZ": 359.9028,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5aac3b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.1875,
            "posY": 0.9622,
            "posZ": -7.865,
            "rotX": 0.231899977,
            "rotY": 0.0351,
            "rotZ": 0.039,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "6362cc",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -0.1572,
            "posY": 0.9681,
            "posZ": -0.2397,
            "rotX": 0.00620000064,
            "rotY": 0.0053,
            "rotZ": 0.121699981,
            "scaleX": 1.2,
            "scaleY": 1.22000313,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Heavy Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863969/983F4F94D4269C0DC3AAF94DC51B10447BEED569/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "b55803",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -13.0694,
            "posY": 0.9638,
            "posZ": -0.9675,
            "rotX": 0.058799997,
            "rotY": 269.9899,
            "rotZ": 0.213000014,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "b80052",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -8.154,
            "posY": 0.9703,
            "posZ": 4.3355,
            "rotX": 0.0001,
            "rotY": 90.05021,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "fe1e3b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 6.9033,
            "posY": 0.9703,
            "posZ": -3.9107,
            "rotX": 0.0,
            "rotY": 269.9542,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "9cf2a4",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23019,
        "posY": 0.7198616,
        "posZ": 5.02,
        "rotX": -2.9522414E-06,
        "rotY": 90.0088043,
        "rotZ": -3.55645E-06,
        "scaleX": 0.950000048,
        "scaleY": 0.950000048,
        "scaleZ": 0.950000048
      },
      "Nickname": "Escalating Hostilities Terrain",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.364703,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"08bb4d\":{\"lock\":true,\"pos\":{\"x\":2.3384,\"y\":0.9694,\"z\":-4.0268},\"rot\":{\"x\":0.1353,\"y\":209.9886,\"z\":0.2096},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"0f7fe7\":{\"lock\":true,\"pos\":{\"x\":8.7147,\"y\":0.9727,\"z\":-1.4484},\"rot\":{\"x\":0,\"y\":269.9987,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-22.2875,\"y\":0.9,\"z\":20.8691},\"rot\":{\"x\":0,\"y\":269.9897,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"3fbe56\":{\"lock\":true,\"pos\":{\"x\":-11.1492,\"y\":0.9571,\"z\":0.7265},\"rot\":{\"x\":0,\"y\":179.9995,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5502ff\":{\"lock\":true,\"pos\":{\"x\":-3.4417,\"y\":0.955,\"z\":5.7106},\"rot\":{\"x\":0.3951,\"y\":119.9833,\"z\":359.9529},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5d92f6\":{\"lock\":true,\"pos\":{\"x\":-5.9184,\"y\":0.9788,\"z\":-5.6917},\"rot\":{\"x\":0,\"y\":29.9895,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"643173\":{\"lock\":true,\"pos\":{\"x\":1.9796,\"y\":0.9727,\"z\":-9.4589},\"rot\":{\"x\":0.0001,\"y\":180.0073,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"728a70\":{\"lock\":true,\"pos\":{\"x\":-1.3377,\"y\":0.9642,\"z\":-0.0352},\"rot\":{\"x\":0,\"y\":0.0201,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"826190\":{\"lock\":true,\"pos\":{\"x\":3.2472,\"y\":0.9976,\"z\":6.0749},\"rot\":{\"x\":358.0052,\"y\":210.3253,\"z\":0.9351},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b5594a\":{\"lock\":true,\"pos\":{\"x\":10.8195,\"y\":0.9529,\"z\":6.3655},\"rot\":{\"x\":0,\"y\":29.9873,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"ca5341\":{\"lock\":true,\"pos\":{\"x\":8.1906,\"y\":5.0127,\"z\":-7.5731},\"rot\":{\"x\":1.275,\"y\":119.2804,\"z\":0.1647},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}},\"f2cea8\":{\"lock\":true,\"pos\":{\"x\":-8.4935,\"y\":5.0126,\"z\":4.5898},\"rot\":{\"x\":1.3033,\"y\":330.0445,\"z\":0.0744},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -22.2875,
            "posY": 0.9087908,
            "posZ": 20.8691,
            "rotX": 1.99875089E-07,
            "rotY": 269.9897,
            "rotZ": 3.468264E-07,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 64,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -24.1047516,
            "posY": 0.9799209,
            "posZ": 22.2738819,
            "rotX": 7.945408E-06,
            "rotY": 269.989624,
            "rotZ": 1.16841848E-05,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 64,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -22.2875,
            "posY": 0.9799204,
            "posZ": 20.8691,
            "rotX": 2.30610575E-09,
            "rotY": 269.9897,
            "rotZ": -4.71704766E-07,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 64,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "08bb4d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 2.3384,
            "posY": 0.9694,
            "posZ": -4.0268,
            "rotX": 0.13530001,
            "rotY": 209.9886,
            "rotZ": 0.209600031,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "0f7fe7",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.7147,
            "posY": 0.9727,
            "posZ": -1.4484,
            "rotX": 0.0,
            "rotY": 269.9987,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "3fbe56",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -11.1492,
            "posY": 0.9571,
            "posZ": 0.7265,
            "rotX": 0.0,
            "rotY": 179.9995,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5502ff",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -3.4417,
            "posY": 0.955,
            "posZ": 5.7106,
            "rotX": 0.395100057,
            "rotY": 119.9833,
            "rotZ": 359.9529,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5d92f6",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -5.9184,
            "posY": 0.9788,
            "posZ": -5.6917,
            "rotX": 0.0,
            "rotY": 29.9895,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "643173",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 1.9796,
            "posY": 0.9727,
            "posZ": -9.4589,
            "rotX": 0.0001,
            "rotY": 180.0073,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "728a70",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -1.3377,
            "posY": 0.9642,
            "posZ": -0.0352,
            "rotX": 0.0,
            "rotY": 0.0201,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.22000313,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Heavy Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863969/983F4F94D4269C0DC3AAF94DC51B10447BEED569/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "826190",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.2472,
            "posY": 0.9976,
            "posZ": 6.0749,
            "rotX": 358.0052,
            "rotY": 210.3253,
            "rotZ": 0.9351001,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "b5594a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.8195,
            "posY": 0.9529,
            "posZ": 6.3655,
            "rotX": 0.0,
            "rotY": 29.9873047,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "ca5341",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.1906,
            "posY": 5.0127,
            "posZ": -7.5731,
            "rotX": 1.27500033,
            "rotY": 119.280388,
            "rotZ": 0.164699882,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "f2cea8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -8.4935,
            "posY": 5.0126,
            "posZ": 4.5898,
            "rotX": 1.30330014,
            "rotY": 330.0445,
            "rotZ": 0.0744,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "GUID": "b5033c",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.71998173,
        "posZ": 9.18,
        "rotX": -2.08339134E-06,
        "rotY": 90.0087357,
        "rotZ": -1.47995343E-06,
        "scaleX": 0.950000048,
        "scaleY": 0.950000048,
        "scaleZ": 0.950000048
      },
      "Nickname": "Awaken the Data-Spirits Terrain",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.364703,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"15357b\":{\"lock\":true,\"pos\":{\"x\":-10.0862,\"y\":0.9703,\"z\":1.7814},\"rot\":{\"x\":0,\"y\":210.0209,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"24b420\":{\"lock\":true,\"pos\":{\"x\":0.6833,\"y\":0.9727,\"z\":2.4367},\"rot\":{\"x\":0,\"y\":239.7664,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5aa1ff\":{\"lock\":true,\"pos\":{\"x\":11.7574,\"y\":0.9474,\"z\":2.3093},\"rot\":{\"x\":0,\"y\":315.0625,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"71b563\":{\"lock\":true,\"pos\":{\"x\":-1.9863,\"y\":0.9529,\"z\":-7.3005},\"rot\":{\"x\":0,\"y\":134.9787,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"79629c\":{\"lock\":true,\"pos\":{\"x\":-1.5732,\"y\":0.9554,\"z\":-1.1544},\"rot\":{\"x\":0.0332,\"y\":60.0155,\"z\":359.8926},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7a8e25\":{\"lock\":true,\"pos\":{\"x\":8.5365,\"y\":0.9703,\"z\":-3.0058},\"rot\":{\"x\":0,\"y\":239.9837,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"be2971\":{\"lock\":true,\"pos\":{\"x\":-9.8035,\"y\":0.9642,\"z\":-6.2489},\"rot\":{\"x\":0,\"y\":29.9843,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"db4daa\":{\"lock\":true,\"pos\":{\"x\":2.6515,\"y\":0.9571,\"z\":6.9174},\"rot\":{\"x\":0,\"y\":0.031,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e11e7a\":{\"lock\":true,\"pos\":{\"x\":8.5241,\"y\":0.9622,\"z\":8.0517},\"rot\":{\"x\":0.233,\"y\":209.9672,\"z\":0.0396},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e1ab42\":{\"lock\":true,\"pos\":{\"x\":-5.4108,\"y\":4.9902,\"z\":3.675},\"rot\":{\"x\":1.3025,\"y\":60.0189,\"z\":0.0777},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}},\"e9d8b5\":{\"lock\":false,\"pos\":{\"x\":-24.3363,\"y\":0.9,\"z\":20.5993},\"rot\":{\"x\":0,\"y\":270.0103,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"f6e978\":{\"lock\":true,\"pos\":{\"x\":5.5714,\"y\":5.0315,\"z\":3.5406},\"rot\":{\"x\":1.254,\"y\":148.7639,\"z\":0.2266},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "15357b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -10.0862,
            "posY": 0.9703,
            "posZ": 1.7814,
            "rotX": 0.0,
            "rotY": 210.0209,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "24b420",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 0.6833,
            "posY": 0.9727,
            "posZ": 2.4367,
            "rotX": 0.0,
            "rotY": 239.766418,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5aa1ff",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 11.7574,
            "posY": 0.9474,
            "posZ": 2.3093,
            "rotX": 0.0,
            "rotY": 315.0625,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "71b563",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -1.9863,
            "posY": 0.9529,
            "posZ": -7.3005,
            "rotX": 0.0,
            "rotY": 134.9787,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "79629c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -1.5732,
            "posY": 0.9554,
            "posZ": -1.1544,
            "rotX": 0.0332,
            "rotY": 60.0154877,
            "rotZ": 359.8926,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "7a8e25",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.5365,
            "posY": 0.9703,
            "posZ": -3.0058,
            "rotX": 0.0,
            "rotY": 239.9837,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "be2971",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -9.8035,
            "posY": 0.9642,
            "posZ": -6.2489,
            "rotX": 0.0,
            "rotY": 29.9843025,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.22000313,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Heavy Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863969/983F4F94D4269C0DC3AAF94DC51B10447BEED569/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "db4daa",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 2.6515,
            "posY": 0.9571,
            "posZ": 6.9174,
            "rotX": 0.0,
            "rotY": 0.0310000051,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e11e7a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.5241,
            "posY": 0.9622,
            "posZ": 8.0517,
            "rotX": 0.233000055,
            "rotY": 209.9672,
            "rotZ": 0.0396000147,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e1ab42",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -5.4108,
            "posY": 4.9902,
            "posZ": 3.675,
            "rotX": 1.30250013,
            "rotY": 60.0189,
            "rotZ": 0.0777,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "e9d8b5",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -24.3363,
            "posY": 0.9799211,
            "posZ": 20.5993,
            "rotX": 5.713139E-06,
            "rotY": 270.0103,
            "rotZ": 3.25488918E-06,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 63,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "f6e978",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 5.5714,
            "posY": 5.0315,
            "posZ": 3.5406,
            "rotX": 1.254,
            "rotY": 148.7639,
            "rotZ": 0.226600036,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "GUID": "573098",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.719775259,
        "posZ": 0.109997705,
        "rotX": 5.774071E-06,
        "rotY": 90.008934,
        "rotZ": -1.414898E-05,
        "scaleX": 0.950000048,
        "scaleY": 0.950000048,
        "scaleZ": 0.950000048
      },
      "Nickname": "Seize Ground Terrain",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.36470294,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"05d033\":{\"lock\":true,\"pos\":{\"x\":-9.0867,\"y\":0.9577,\"z\":-1.8652},\"rot\":{\"x\":359.8329,\"y\":90.0123,\"z\":0.08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"19aea5\":{\"lock\":true,\"pos\":{\"x\":5.9896,\"y\":0.9622,\"z\":-5.3476},\"rot\":{\"x\":0.2309,\"y\":269.9742,\"z\":0.0394},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"1e9c42\":{\"lock\":true,\"pos\":{\"x\":-0.0929,\"y\":0.9619,\"z\":-3.4934},\"rot\":{\"x\":359.7859,\"y\":-0.0017,\"z\":0.2912},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-21.8764,\"y\":0.9,\"z\":21.6475},\"rot\":{\"x\":0,\"y\":269.9897,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"329a9f\":{\"lock\":true,\"pos\":{\"x\":9.1664,\"y\":0.9614,\"z\":3.362},\"rot\":{\"x\":0,\"y\":180.0165,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"346159\":{\"lock\":true,\"pos\":{\"x\":-6.906,\"y\":0.9661,\"z\":7.1717},\"rot\":{\"x\":0,\"y\":239.993,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"376d43\":{\"lock\":true,\"pos\":{\"x\":-2.9087,\"y\":0.9642,\"z\":2.4345},\"rot\":{\"x\":0,\"y\":270.0004,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"3e932f\":{\"lock\":true,\"pos\":{\"x\":0.0511,\"y\":0.9727,\"z\":-6.3046},\"rot\":{\"x\":0,\"y\":180.0058,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5aa1ff\":{\"lock\":false,\"pos\":{\"x\":-6.985,\"y\":0.9474,\"z\":7.3087},\"rot\":{\"x\":0,\"y\":239.9907,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"74ef4c\":{\"lock\":true,\"pos\":{\"x\":-6.402,\"y\":0.9571,\"z\":7.7456},\"rot\":{\"x\":0,\"y\":285.0051,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"795370\":{\"lock\":true,\"pos\":{\"x\":10.093,\"y\":0.9812,\"z\":-4.787},\"rot\":{\"x\":0,\"y\":90.0306,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7fda0f\":{\"lock\":true,\"pos\":{\"x\":3.7804,\"y\":0.9703,\"z\":5.731},\"rot\":{\"x\":0,\"y\":270.0063,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"8803be\":{\"lock\":true,\"pos\":{\"x\":-5.8452,\"y\":5.0127,\"z\":-3.5735},\"rot\":{\"x\":1.2738,\"y\":359.984,\"z\":0.1669},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}},\"e0bbfa\":{\"lock\":true,\"pos\":{\"x\":-12.8063,\"y\":0.9703,\"z\":7.6267},\"rot\":{\"x\":0,\"y\":269.9861,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -23.0177917,
            "posY": 0.979920268,
            "posZ": 22.26564,
            "rotX": 4.64973283E-07,
            "rotY": 269.990662,
            "rotZ": 5.67310644E-06,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 65,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -21.8764,
            "posY": 0.9799205,
            "posZ": 21.6475,
            "rotX": 1.17798686E-06,
            "rotY": 269.9897,
            "rotZ": -7.998444E-08,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 65,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "05d033",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -9.0867,
            "posY": 0.9577,
            "posZ": -1.8652,
            "rotX": 359.8329,
            "rotY": 90.0123,
            "rotZ": 0.0800000057,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "19aea5",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 5.9896,
            "posY": 0.9622,
            "posZ": -5.3476,
            "rotX": 0.230900064,
            "rotY": 269.9742,
            "rotZ": 0.03940001,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "1e9c42",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -0.0929,
            "posY": 0.9619,
            "posZ": -3.4934,
            "rotX": 359.7859,
            "rotY": -0.0017,
            "rotZ": 0.2912,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "329a9f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 9.1664,
            "posY": 0.9614,
            "posZ": 3.362,
            "rotX": 0.0,
            "rotY": 180.0165,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "346159",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -6.906,
            "posY": 0.9661,
            "posZ": 7.1717,
            "rotX": 0.0,
            "rotY": 239.992981,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "376d43",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -2.9087,
            "posY": 0.9642,
            "posZ": 2.4345,
            "rotX": 0.0,
            "rotY": 270.000366,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.22000313,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Heavy Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863969/983F4F94D4269C0DC3AAF94DC51B10447BEED569/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "3e932f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 0.0511,
            "posY": 0.9727,
            "posZ": -6.3046,
            "rotX": 0.0,
            "rotY": 180.0058,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "795370",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.093,
            "posY": 0.9812,
            "posZ": -4.787,
            "rotX": 0.0,
            "rotY": 90.0306,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "7fda0f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.7804,
            "posY": 0.9703,
            "posZ": 5.731,
            "rotX": 0.0,
            "rotY": 270.0063,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "8803be",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -5.8452,
            "posY": 5.0127,
            "posZ": -3.5735,
            "rotX": 1.27380013,
            "rotY": 359.984,
            "rotZ": 0.166900009,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "e0bbfa",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -12.8063,
            "posY": 0.9703,
            "posZ": 7.6267,
            "rotX": 0.0,
            "rotY": 269.9861,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "bb3898",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.7199496,
        "posZ": 17.93,
        "rotX": -3.46110869E-06,
        "rotY": 90.00851,
        "rotZ": 5.29281E-06,
        "scaleX": 0.95,
        "scaleY": 0.95,
        "scaleZ": 0.95
      },
      "Nickname": "Loot and Salvage Terrain",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.364703,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"20eca3\":{\"lock\":true,\"pos\":{\"x\":6.6876,\"y\":0.9788,\"z\":-0.9415},\"rot\":{\"x\":0,\"y\":90.0441,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-22.5181,\"y\":0.9,\"z\":20.39},\"rot\":{\"x\":0,\"y\":270.0088,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2d66f5\":{\"lock\":true,\"pos\":{\"x\":-6,\"y\":0.92,\"z\":2},\"rot\":{\"x\":0,\"y\":270.0001,\"z\":0},\"tint\":{\"a\":0.983271300792694,\"b\":1,\"g\":1,\"r\":1}},\"5aa1ff\":{\"lock\":true,\"pos\":{\"x\":3.987,\"y\":0.9474,\"z\":2.5681},\"rot\":{\"x\":0,\"y\":90.0112,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5b8158\":{\"lock\":true,\"pos\":{\"x\":-5.802,\"y\":0.9788,\"z\":3.3464},\"rot\":{\"x\":-0.0002,\"y\":359.9913,\"z\":0.0004},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"71b563\":{\"lock\":true,\"pos\":{\"x\":-9.3609,\"y\":1.0014,\"z\":0.3433},\"rot\":{\"x\":0,\"y\":134.9993,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"79629c\":{\"lock\":true,\"pos\":{\"x\":7.5312,\"y\":0.9523,\"z\":7.9309},\"rot\":{\"x\":359.8337,\"y\":179.9981,\"z\":359.9774},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"be2971\":{\"lock\":true,\"pos\":{\"x\":0.6765,\"y\":0.9642,\"z\":0.0899},\"rot\":{\"x\":0,\"y\":90.008,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"db4daa\":{\"lock\":true,\"pos\":{\"x\":11.3999,\"y\":0.9613,\"z\":-1.5021},\"rot\":{\"x\":0.0093,\"y\":90.0216,\"z\":359.8375},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e11e7a\":{\"lock\":true,\"pos\":{\"x\":3.3319,\"y\":0.9622,\"z\":-7.8648},\"rot\":{\"x\":0.235,\"y\":359.9459,\"z\":0.0398},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"f74a8c\":{\"lock\":true,\"pos\":{\"x\":-9.0991,\"y\":0.9774,\"z\":-3.1819},\"rot\":{\"x\":0.002,\"y\":179.9895,\"z\":0.0863},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "20eca3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 6.6876,
            "posY": 0.9788,
            "posZ": -0.9415,
            "rotX": 0.0,
            "rotY": 90.0441,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -5.06658173,
            "posY": 6.750106,
            "posZ": 4.587758,
            "rotX": 0.0,
            "rotY": 270.0088,
            "rotZ": 0.0,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 61,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5aa1ff",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.987,
            "posY": 0.9474,
            "posZ": 2.5681,
            "rotX": 0.0,
            "rotY": 90.0112,
            "rotZ": -0.0001,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5b8158",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -5.802,
            "posY": 0.9788,
            "posZ": 3.3464,
            "rotX": -0.000200000009,
            "rotY": 359.9913,
            "rotZ": 0.0004,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "71b563",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -9.3609,
            "posY": 1.0014,
            "posZ": 0.3433,
            "rotX": 0.0,
            "rotY": 134.9993,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "79629c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.5312,
            "posY": 0.9523,
            "posZ": 7.9309,
            "rotX": 359.8337,
            "rotY": 179.9981,
            "rotZ": 359.9774,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "be2971",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 0.6765,
            "posY": 0.9642,
            "posZ": 0.0899,
            "rotX": 0.0,
            "rotY": 90.008,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.22000313,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Heavy Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863969/983F4F94D4269C0DC3AAF94DC51B10447BEED569/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "db4daa",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 11.3999,
            "posY": 0.9613,
            "posZ": -1.5021,
            "rotX": 0.009299996,
            "rotY": 90.02159,
            "rotZ": 359.8375,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e11e7a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.3319,
            "posY": 0.9622,
            "posZ": -7.8648,
            "rotX": 0.235,
            "rotY": 359.9459,
            "rotZ": 0.0398,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "f74a8c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -9.0991,
            "posY": 0.9774,
            "posZ": -3.1819,
            "rotX": 0.002,
            "rotY": 179.9895,
            "rotZ": 0.08630001,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "478202",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.7200615,
        "posZ": -8.04,
        "rotX": -2.68827853E-06,
        "rotY": 90.0088,
        "rotZ": -1.48118011E-06,
        "scaleX": 0.950000048,
        "scaleY": 0.950000048,
        "scaleZ": 0.950000048
      },
      "Nickname": "Secure Archeotech Terrain",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.36470294,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"07f529\":{\"lock\":true,\"pos\":{\"x\":8.6725,\"y\":0.9759,\"z\":-5.36},\"rot\":{\"x\":359.8986,\"y\":359.9738,\"z\":359.6608},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"0a241d\":{\"lock\":true,\"pos\":{\"x\":-3.2485,\"y\":5.0126,\"z\":-7.8097},\"rot\":{\"x\":1.3033,\"y\":90.022,\"z\":0.0744},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}},\"21df57\":{\"lock\":true,\"pos\":{\"x\":-2.3001,\"y\":0.9635,\"z\":-4.0113},\"rot\":{\"x\":0.0448,\"y\":254.9905,\"z\":0.2821},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2be744\":{\"lock\":true,\"pos\":{\"x\":-9.3247,\"y\":0.9781,\"z\":5.2344},\"rot\":{\"x\":0.0113,\"y\":269.997,\"z\":359.8528},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-21.8764,\"y\":0.9,\"z\":21.6475},\"rot\":{\"x\":0,\"y\":269.9897,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5aa1ff\":{\"lock\":true,\"pos\":{\"x\":-2.2129,\"y\":0.9474,\"z\":-3.8166},\"rot\":{\"x\":0,\"y\":15.0019,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"775d3a\":{\"lock\":true,\"pos\":{\"x\":-12.4956,\"y\":0.9614,\"z\":-2.9091},\"rot\":{\"x\":-0.0002,\"y\":0.0201,\"z\":0.154},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7769a0\":{\"lock\":true,\"pos\":{\"x\":-8.6619,\"y\":0.9789,\"z\":-4.6751},\"rot\":{\"x\":0.0092,\"y\":89.9907,\"z\":359.9886},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"783fd2\":{\"lock\":true,\"pos\":{\"x\":0.5642,\"y\":0.9806,\"z\":1.2736},\"rot\":{\"x\":0.0021,\"y\":179.9762,\"z\":0.1464},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"915d02\":{\"lock\":true,\"pos\":{\"x\":5.4717,\"y\":0.9513,\"z\":7.9932},\"rot\":{\"x\":359.8338,\"y\":180.0158,\"z\":359.9774},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"afdb5d\":{\"lock\":true,\"pos\":{\"x\":-2.2022,\"y\":5.0126,\"z\":7.784},\"rot\":{\"x\":1.3033,\"y\":270.009,\"z\":0.0745},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}},\"cab24a\":{\"lock\":true,\"pos\":{\"x\":10.688,\"y\":0.9614,\"z\":3.1551},\"rot\":{\"x\":0,\"y\":270.0001,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e62860\":{\"lock\":true,\"pos\":{\"x\":2.6953,\"y\":0.9622,\"z\":-8.0224},\"rot\":{\"x\":0.2346,\"y\":0.006,\"z\":0.039},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"fb6803\":{\"lock\":true,\"pos\":{\"x\":13.4568,\"y\":0.9727,\"z\":7.3553},\"rot\":{\"x\":0,\"y\":90.0274,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -22.70175,
            "posY": 0.9799203,
            "posZ": 22.5806084,
            "rotX": -1.88303613E-06,
            "rotY": 269.989624,
            "rotZ": 2.03622767E-06,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 67,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -9.49175549,
            "posY": 0.9152806,
            "posZ": 22.9307461,
            "rotX": -3.10402447E-06,
            "rotY": 269.989655,
            "rotZ": 1.92661355E-06,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 67,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "775d3a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -12.4956,
            "posY": 0.9614,
            "posZ": -2.9091,
            "rotX": -0.000200000009,
            "rotY": 0.0201,
            "rotZ": 0.154000014,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2be744",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -9.3247,
            "posY": 0.9781,
            "posZ": 5.2344,
            "rotX": 0.0113000013,
            "rotY": 269.997,
            "rotZ": 359.8528,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "7769a0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -8.6619,
            "posY": 0.9789,
            "posZ": -4.6751,
            "rotX": 0.0092,
            "rotY": 89.99069,
            "rotZ": 359.9886,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5aa1ff",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -2.2129,
            "posY": 0.9474,
            "posZ": -3.8166,
            "rotX": 0.0,
            "rotY": 15.0019,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "0a241d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -3.2485,
            "posY": 5.0126,
            "posZ": -7.8097,
            "rotX": 1.30330014,
            "rotY": 90.022,
            "rotZ": 0.0744000152,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "783fd2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 0.5642,
            "posY": 0.9806,
            "posZ": 1.2736,
            "rotX": 0.00210000016,
            "rotY": 179.9762,
            "rotZ": 0.1464,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "afdb5d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -2.2022,
            "posY": 5.0126,
            "posZ": 7.784,
            "rotX": 1.30330014,
            "rotY": 270.008972,
            "rotZ": 0.07449994,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "915d02",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 5.4717,
            "posY": 0.9513,
            "posZ": 7.9932,
            "rotX": 359.8338,
            "rotY": 180.0158,
            "rotZ": 359.9774,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "cab24a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.2215414,
            "posY": 0.9614,
            "posZ": 3.1551,
            "rotX": 0.0,
            "rotY": 270.000061,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "fb6803",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.4568,
            "posY": 0.9727,
            "posZ": 7.3553,
            "rotX": 0.0,
            "rotY": 90.0274,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "07f529",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.6725,
            "posY": 0.9759,
            "posZ": -5.36,
            "rotX": 359.8986,
            "rotY": 359.9738,
            "rotZ": 359.6608,
            "scaleX": 1.2,
            "scaleY": 1.22000313,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Heavy Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863969/983F4F94D4269C0DC3AAF94DC51B10447BEED569/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e62860",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 2.6953,
            "posY": 0.9622,
            "posZ": -8.0224,
            "rotX": 0.234600037,
            "rotY": 0.006,
            "rotZ": 0.0390000045,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "525c93",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.7199962,
        "posZ": 13.44,
        "rotX": 9.309558E-07,
        "rotY": 90.0088959,
        "rotZ": -8.125239E-06,
        "scaleX": 0.95,
        "scaleY": 0.95,
        "scaleZ": 0.95
      },
      "Nickname": "Consecration ",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.3647029,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"20eca3\":{\"lock\":true,\"pos\":{\"x\":-4.7359,\"y\":0.9741,\"z\":-4.2987},\"rot\":{\"x\":359.8671,\"y\":30.0159,\"z\":0.0725},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-21.7633,\"y\":0.9,\"z\":20.087},\"rot\":{\"x\":0,\"y\":269.9897,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5aa1ff\":{\"lock\":true,\"pos\":{\"x\":5.9027,\"y\":0.9474,\"z\":-5.9673},\"rot\":{\"x\":0,\"y\":224.7806,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5b8158\":{\"lock\":true,\"pos\":{\"x\":4.6486,\"y\":0.9087,\"z\":0.3408},\"rot\":{\"x\":0.0019,\"y\":268.7704,\"z\":-0.0007},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"71b563\":{\"lock\":true,\"pos\":{\"x\":-10.3495,\"y\":0.9529,\"z\":4.3646},\"rot\":{\"x\":0,\"y\":270.0148,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"79629c\":{\"lock\":true,\"pos\":{\"x\":-0.2039,\"y\":0.9595,\"z\":0.0501},\"rot\":{\"x\":359.8338,\"y\":269.9885,\"z\":359.9774},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"b6c130\":{\"lock\":true,\"pos\":{\"x\":13.4431,\"y\":0.9727,\"z\":-6.2102},\"rot\":{\"x\":0.0038,\"y\":89.9894,\"z\":0.0009},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"be2971\":{\"lock\":true,\"pos\":{\"x\":11.2317,\"y\":0.9727,\"z\":0.6289},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"db4daa\":{\"lock\":true,\"pos\":{\"x\":9.8254,\"y\":0.9571,\"z\":5.9941},\"rot\":{\"x\":0,\"y\":270.0379,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e11e7a\":{\"lock\":true,\"pos\":{\"x\":-10.7859,\"y\":0.9622,\"z\":-5.6067},\"rot\":{\"x\":0.2182,\"y\":180.4835,\"z\":0.0412},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"f74a8c\":{\"lock\":true,\"pos\":{\"x\":-4.879,\"y\":0.9752,\"z\":3.9686},\"rot\":{\"x\":359.7784,\"y\":150.0177,\"z\":359.9052},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "20eca3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -4.7359,
            "posY": 0.9741,
            "posZ": -4.2987,
            "rotX": 359.8671,
            "rotY": 30.0158978,
            "rotZ": 0.0725000054,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -11.4257421,
            "posY": 4.96149826,
            "posZ": 10.5456839,
            "rotX": 0.0,
            "rotY": 269.9897,
            "rotZ": 0.0,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 63,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5aa1ff",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 5.9027,
            "posY": 0.9474,
            "posZ": -5.9673,
            "rotX": 0.0,
            "rotY": 224.7806,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702259/D388AF1A852F2A2DFA40E08240490B911D7DB28E/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5b8158",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 4.6486,
            "posY": 0.9087,
            "posZ": 0.3408,
            "rotX": 0.00190000026,
            "rotY": 268.7704,
            "rotZ": -0.000700000033,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "71b563",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -10.3495,
            "posY": 0.9529,
            "posZ": 4.3646,
            "rotX": 0.0,
            "rotY": 270.0148,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "79629c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -0.2039,
            "posY": 0.9595,
            "posZ": 0.0501,
            "rotX": 359.8338,
            "rotY": 269.9885,
            "rotZ": 359.9774,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "b6c130",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.4431,
            "posY": 0.9727,
            "posZ": -6.2102,
            "rotX": 0.0038000003,
            "rotY": 89.9894,
            "rotZ": 0.0009,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "be2971",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 11.2317,
            "posY": 0.9727,
            "posZ": 0.6289,
            "rotX": 0.0,
            "rotY": 180.0,
            "rotZ": 0.0,
            "scaleX": 1.2,
            "scaleY": 1.22000313,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Heavy Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863969/983F4F94D4269C0DC3AAF94DC51B10447BEED569/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673863857/8C7565F9EFCBD1517A93857B38D18382C6667AC8/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "db4daa",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 9.8254,
            "posY": 0.9571,
            "posZ": 5.9941,
            "rotX": 0.0,
            "rotY": 270.0379,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e11e7a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -10.7859,
            "posY": 0.9622,
            "posZ": -5.6067,
            "rotX": 0.218200013,
            "rotY": 180.4835,
            "rotZ": 0.0411999971,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "f74a8c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -4.879,
            "posY": 0.9752,
            "posZ": 3.9686,
            "rotX": 359.7784,
            "rotY": 150.0177,
            "rotZ": 359.9052,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ]
    },
    {
      "GUID": "9604cc",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.720009863,
        "posZ": -16.15,
        "rotX": 3.13163514E-06,
        "rotY": 90.00749,
        "rotZ": 1.62267281E-06,
        "scaleX": 0.950000048,
        "scaleY": 0.950000048,
        "scaleZ": 0.950000048
      },
      "Nickname": "Master The Terminals",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.3647028,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"02247b\":{\"lock\":true,\"pos\":{\"x\":10.3617,\"y\":5.0126,\"z\":8.0014},\"rot\":{\"x\":1.3033,\"y\":165.0136,\"z\":0.0741},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}},\"1b0c53\":{\"lock\":true,\"pos\":{\"x\":3.356,\"y\":0.9513,\"z\":-6.9317},\"rot\":{\"x\":359.8335,\"y\":30.0068,\"z\":359.9774},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2a34a3\":{\"lock\":true,\"pos\":{\"x\":-2.2435,\"y\":0.9727,\"z\":-5.6917},\"rot\":{\"x\":0.0021,\"y\":300.0013,\"z\":0.0003},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-21.8764,\"y\":0.9625,\"z\":21.6475},\"rot\":{\"x\":0,\"y\":269.9897,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"618a23\":{\"lock\":true,\"pos\":{\"x\":8.9214,\"y\":0.9761,\"z\":-3.4296},\"rot\":{\"x\":0.1091,\"y\":44.9888,\"z\":0.0453},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"9001d2\":{\"lock\":true,\"pos\":{\"x\":-8.7878,\"y\":0.9769,\"z\":3.5001},\"rot\":{\"x\":0.1901,\"y\":225.0278,\"z\":359.9926},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"9c4c6d\":{\"lock\":true,\"pos\":{\"x\":10.5387,\"y\":0.9622,\"z\":2.8844},\"rot\":{\"x\":0.2357,\"y\":29.8802,\"z\":0.0388},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"cab41e\":{\"lock\":true,\"pos\":{\"x\":-2.4786,\"y\":0.9529,\"z\":4.7811},\"rot\":{\"x\":0,\"y\":284.9824,\"z\":0.0004},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"ce4153\":{\"lock\":true,\"pos\":{\"x\":3.8403,\"y\":0.9571,\"z\":-2.3642},\"rot\":{\"x\":0,\"y\":285.0136,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"da3889\":{\"lock\":true,\"pos\":{\"x\":2.268,\"y\":0.9727,\"z\":5.9469},\"rot\":{\"x\":0,\"y\":119.9771,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e8c8f3\":{\"lock\":true,\"pos\":{\"x\":-10.2647,\"y\":5.0126,\"z\":-2.9368},\"rot\":{\"x\":1.3033,\"y\":135.0217,\"z\":0.0736},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "02247b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.3617,
            "posY": 5.0126,
            "posZ": 8.0014,
            "rotX": 1.30330026,
            "rotY": 165.0136,
            "rotZ": 0.07410002,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "1b0c53",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.356,
            "posY": 0.9513,
            "posZ": -6.9317,
            "rotX": 359.8335,
            "rotY": 30.0068,
            "rotZ": 359.9774,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2a34a3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -2.2435,
            "posY": 0.9727,
            "posZ": -5.6917,
            "rotX": 0.0021,
            "rotY": 300.0013,
            "rotZ": 0.000299999985,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -10.9382105,
            "posY": 4.96149826,
            "posZ": 10.82376,
            "rotX": 0.0,
            "rotY": 269.9897,
            "rotZ": 0.0,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 69,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "618a23",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.9214,
            "posY": 0.9761,
            "posZ": -3.4296,
            "rotX": 0.1091,
            "rotY": 44.9888,
            "rotZ": 0.0453,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "9001d2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -8.7878,
            "posY": 0.9769,
            "posZ": 3.5001,
            "rotX": 0.1901,
            "rotY": 225.0278,
            "rotZ": 359.9926,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "9c4c6d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.5387,
            "posY": 0.9622,
            "posZ": 2.8844,
            "rotX": 0.235699967,
            "rotY": 29.8802,
            "rotZ": 0.0387999937,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "cab41e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -2.4786,
            "posY": 0.9529,
            "posZ": 4.7811,
            "rotX": 0.0,
            "rotY": 284.982361,
            "rotZ": 0.0004,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "ce4153",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.8403,
            "posY": 0.9571,
            "posZ": -2.3642,
            "rotX": 0.0,
            "rotY": 285.0136,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "da3889",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 2.268,
            "posY": 0.9727,
            "posZ": 5.9469,
            "rotX": 0.0,
            "rotY": 119.9771,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e8c8f3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -10.2647,
            "posY": 5.0126,
            "posZ": -2.9368,
            "rotX": 1.30330014,
            "rotY": 135.0217,
            "rotZ": 0.07360004,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "GUID": "6bc4ff",
      "Name": "Bag",
      "Transform": {
        "posX": 70.23,
        "posY": 0.72001344,
        "posZ": -12.13,
        "rotX": 3.06298148E-06,
        "rotY": 90.00736,
        "rotZ": 5.78024037E-06,
        "scaleX": 0.950000048,
        "scaleY": 0.950000048,
        "scaleZ": 0.950000048
      },
      "Nickname": "Duel of Wits Terrain",
      "Description": "By Directsun",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.364702761,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "\nBCBtype = \"terrain\"\n-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\nCONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30,\r\n    },\r\n}\r\n\r\n\r\n--[[ Memory Bag Groups ]]-------------------------------------------------------\r\n--[[\r\nUtility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\".\r\n--]]\r\n\r\nmemoryGroupName = {memoryBag=self}\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _,bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid,_ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid,_ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = {\r\n    NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups',\r\n}\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding = 4,\r\n    memoryBag=self,\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label=self.greyedOutText,\r\n        value=optionalStartingValue or nil,\r\n        alignment=3, -- Center aligned\r\n        input_function=\"groupNameInput_onCharacterTyped\", function_owner=self.memoryBag,\r\n        position={2.1,0.3,0}, rotation={0,270,0}, width=width, height=350,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1},\r\n    })\r\nend\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index=0,\r\n        width=self:computeWidth(text)\r\n    })\r\nend\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _,field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n--//////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList,[\"groupName\"]=memoryGroupName:get()}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1.25 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n        self.createButton({\r\n            label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={0,0.3,-3.6}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Selection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={0,0.3,2}, rotation={0,180,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n        groupNameInput:create(memoryGroupName:get())\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0,0.3,-4.4}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0,0.3,-5.2}, rotation={0,180,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,-2.8}, rotation={0,180,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={-2,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n        position={-2.8,0.3,0}, rotation={0,270,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
      "LuaScriptState": "{\"ml\":{\"02247b\":{\"lock\":true,\"pos\":{\"x\":10.3617,\"y\":5.0126,\"z\":8.0014},\"rot\":{\"x\":1.3033,\"y\":165.0136,\"z\":0.0741},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}},\"1b0c53\":{\"lock\":true,\"pos\":{\"x\":3.356,\"y\":0.9513,\"z\":-6.9317},\"rot\":{\"x\":359.8335,\"y\":30.0068,\"z\":359.9774},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2a34a3\":{\"lock\":true,\"pos\":{\"x\":-2.2435,\"y\":0.9727,\"z\":-5.6917},\"rot\":{\"x\":0.0021,\"y\":300.0013,\"z\":0.0003},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2c20b9\":{\"lock\":false,\"pos\":{\"x\":-21.8764,\"y\":0.9,\"z\":21.6475},\"rot\":{\"x\":0,\"y\":269.9897,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5aa1ff\":{\"lock\":true,\"pos\":{\"x\":-10.7301,\"y\":0.9474,\"z\":-7.4065},\"rot\":{\"x\":0,\"y\":315.008,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"618a23\":{\"lock\":true,\"pos\":{\"x\":8.9214,\"y\":0.9761,\"z\":-3.4296},\"rot\":{\"x\":0.1091,\"y\":44.9888,\"z\":0.0453},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"9001d2\":{\"lock\":true,\"pos\":{\"x\":-8.7878,\"y\":0.9769,\"z\":3.5001},\"rot\":{\"x\":0.1901,\"y\":225.0278,\"z\":359.9926},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"9c4c6d\":{\"lock\":true,\"pos\":{\"x\":10.5387,\"y\":0.9622,\"z\":2.8844},\"rot\":{\"x\":0.2357,\"y\":29.8802,\"z\":0.0388},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"cab41e\":{\"lock\":true,\"pos\":{\"x\":-2.4786,\"y\":0.9529,\"z\":4.7811},\"rot\":{\"x\":0,\"y\":284.9824,\"z\":0.0004},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"ce4153\":{\"lock\":true,\"pos\":{\"x\":3.8403,\"y\":0.9571,\"z\":-2.3642},\"rot\":{\"x\":0,\"y\":285.0136,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"da3889\":{\"lock\":true,\"pos\":{\"x\":2.268,\"y\":0.9727,\"z\":5.9469},\"rot\":{\"x\":0,\"y\":119.9771,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e8c8f3\":{\"lock\":true,\"pos\":{\"x\":-10.2647,\"y\":5.0126,\"z\":-2.9368},\"rot\":{\"x\":1.3033,\"y\":135.0217,\"z\":0.0736},\"tint\":{\"a\":1,\"b\":0.999999821186066,\"g\":0.992160260677338,\"r\":0.999999821186066}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "2c20b9",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -21.8764,
            "posY": 0.9625348,
            "posZ": 21.6475,
            "rotX": -5.651798E-07,
            "rotY": 269.9897,
            "rotZ": 6.712487E-08,
            "scaleX": 3.18583179,
            "scaleY": 1.0,
            "scaleZ": 3.18583179
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "http://cloud-3.steamusercontent.com/ugc/1693903078375068867/37D1E6A64FA1035AB788207779439A040F741B61/",
            "PDFPassword": "",
            "PDFPage": 68,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "02247b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.3617,
            "posY": 5.0126,
            "posZ": 8.0014,
            "rotX": 1.30330026,
            "rotY": 165.0136,
            "rotZ": 0.07410002,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "1b0c53",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.356,
            "posY": 0.9513,
            "posZ": -6.9317,
            "rotX": 359.8335,
            "rotY": 30.0068,
            "rotZ": 359.9774,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891538/9A308089E740B14C0F3726E7E0A8716F35214372/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2a34a3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -2.2435,
            "posY": 0.9727,
            "posZ": -5.6917,
            "rotX": 0.0021,
            "rotY": 300.0013,
            "rotZ": 0.000299999985,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "618a23",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.9214,
            "posY": 0.9761,
            "posZ": -3.4296,
            "rotX": 0.1091,
            "rotY": 44.9888,
            "rotZ": 0.0453,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "9001d2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -8.7878,
            "posY": 0.9769,
            "posZ": 3.5001,
            "rotX": 0.1901,
            "rotY": 225.0278,
            "rotZ": 359.9926,
            "scaleX": 1.2,
            "scaleY": 1.31122339,
            "scaleZ": 1.2
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864265/713FFBD54AE37C34A5DA3ED9D2B3769672A1055B/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864146/C2D85719F06A5F3F0E5FC0276D54AB8DDE12A753/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "9c4c6d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 10.5387,
            "posY": 0.9622,
            "posZ": 2.8844,
            "rotX": 0.235699967,
            "rotY": 29.8802,
            "rotZ": 0.0387999937,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891695/7D30E9BF25563CB0319C9D88A3F22093B3A3F557/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399871832891845/3F6D3FC61E2D12329A75B0193BDE1D5289D232DE/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "cab41e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -2.4786,
            "posY": 0.9529,
            "posZ": 4.7811,
            "rotX": 0.0,
            "rotY": 284.982361,
            "rotZ": 0.0004,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499702372/320F9A2FF23F9E6FA826E0725CE63FB9ADF65ADF/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "ce4153",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.8403,
            "posY": 0.9571,
            "posZ": -2.3642,
            "rotX": 0.0,
            "rotY": 285.0136,
            "rotZ": 0.0,
            "scaleX": 0.94,
            "scaleY": 0.94,
            "scaleZ": 0.94
          },
          "Nickname": "Light Cover",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701955/38D6C94EE6DE01DCCA54E8623AA1481F15A317A9/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1689399788499701753/4205D5D61867F1690BA94462926634E9155ACE7A/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "da3889",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 2.268,
            "posY": 0.9727,
            "posZ": 5.9469,
            "rotX": 0.0,
            "rotY": 119.9771,
            "rotZ": 0.0,
            "scaleX": 1.20000494,
            "scaleY": 1.29029989,
            "scaleZ": 1.20000494
          },
          "Nickname": "Heavy Cover / Vantage / Light Cover(top)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864587/94965049F714722351E9C28B0266A460C54E79BC/",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1680393048673864452/AB485627B5B6A87F6CBFDF62C3FAE711DF8D8EB3/",
            "Convex": false,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e8c8f3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -10.2647,
            "posY": 5.0126,
            "posZ": -2.9368,
            "rotX": 1.30330014,
            "rotY": 135.0217,
            "rotZ": 0.07360004,
            "scaleX": 0.395813,
            "scaleY": 0.5750031,
            "scaleZ": 0.3659706
          },
          "Nickname": "Heavy Cover / Vantage ",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 0.9999998,
            "g": 0.992160261,
            "b": 0.9999998
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": true,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": false,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
            "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 4,
            "CastShadows": true
          },
          "LuaScript": "\nBCBtype = \"terrain\"\n",
          "LuaScriptState": "",
          "XmlUI": "",
          "ChildObjects": [
            {
              "GUID": "86f204",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": -0.363111168,
                "posY": -7.218862,
                "posZ": -0.7764803,
                "rotX": 358.7872,
                "rotY": 7.142228,
                "rotZ": 359.637665,
                "scaleX": 2.52934146,
                "scaleY": 1.73942852,
                "scaleZ": 2.72832465
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                "MaterialIndex": 0,
                "TypeIndex": 0,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2a8ce",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -0.5144896,
                "posY": -0.04470421,
                "posZ": 3.72905612,
                "rotX": -2.47589128E-07,
                "rotY": 325.153564,
                "rotZ": -7.609887E-08,
                "scaleX": 1.02523577,
                "scaleY": 0.99999994,
                "scaleZ": 0.9740687
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "ColorDiffuse": {
                "r": 0.9999998,
                "g": 0.992160261,
                "b": 0.9999998
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": false,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "www.consoleclone.com/TTS/models/dun_tiles_pack_a/tiles_4x4v3.obj",
                "DiffuseURL": "https://i.imgur.com/4SzahTm.jpghttps://i.imgur.com/4SzahTm.jpg",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "CastShadows": true
              },
              "LuaScript": "\nBCBtype = \"terrain\"\n",
              "LuaScriptState": "",
              "XmlUI": "",
              "ChildObjects": [
                {
                  "GUID": "46890f",
                  "Name": "Custom_Assetbundle",
                  "Transform": {
                    "posX": 0.5851862,
                    "posY": -7.08861256,
                    "posZ": 1.50555015,
                    "rotX": 358.799042,
                    "rotY": 11.9837008,
                    "rotZ": 0.289132059,
                    "scaleX": 2.5346632,
                    "scaleY": 1.7394073,
                    "scaleZ": 2.72221112
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomAssetbundle": {
                    "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/773990320255753084/6701EACBEEECF764FE47917E49BFF52F6A290D16/",
                    "AssetbundleSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/773990320255769959/11430B4C07F7DC4A7D024E9213F0D39AD1F2A531/",
                    "MaterialIndex": 0,
                    "TypeIndex": 0,
                    "LoopingEffectIndex": 0
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}