{
  "SaveName": "Adeptus Titanicus",
  "EpochTime": 1629702861,
  "Date": "8/23/2021 3:14:21 AM",
  "VersionNumber": "v13.1.1",
  "GameMode": "Flex Table",
  "GameType": "",
  "GameComplexity": "",
  "Tags": [],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "Table_None",
  "Sky": "Sky_Regal",
  "SkyURL": "https://i.imgur.com/sV1zhXd.jpg",
  "Note": "",
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "MusicPlayer": {
    "RepeatSong": true,
    "PlaylistEntry": -1,
    "CurrentAudioTitle": "Ultramarines Chant",
    "CurrentAudioURL": "http://cloud-3.steamusercontent.com/ugc/773976977327440295/17C1CAA1F70F178395E93C05E55946061E695598/",
    "AudioLibrary": [
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/773976977327440295/17C1CAA1F70F178395E93C05E55946061E695598/",
        "Item2": "Ultramarines Chant"
      }
    ]
  },
  "Grid": {
    "Type": 0,
    "Lines": true,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.318965733,
    "ThickLines": true,
    "Snapping": false,
    "Offset": true,
    "BothSnapping": false,
    "xSize": 1.62,
    "ySize": 1.62,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.7,
    "LightColor": {
      "r": 1.0,
      "g": 1.0,
      "b": 1.0
    },
    "AmbientIntensity": 1.668,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 1.0,
      "g": 1.0,
      "b": 1.0
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 10,
    "LutContribution": 0.159999922,
    "LutURL": ""
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": []
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "DecalPallet": [],
  "LuaScript": "--",
  "LuaScriptState": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "ObjectStates": [
    {
      "GUID": "bf963f",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 5.0,
        "posZ": -37.75,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 11.8350019,
        "scaleY": 7.002465,
        "scaleZ": 4.04115963
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "White",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b8ecb4",
      "Name": "HandTrigger",
      "Transform": {
        "posX": -55.75,
        "posY": 5.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 11.7389879,
        "scaleY": 7.0,
        "scaleZ": 4.0799613
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a8d913",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 5.0,
        "posZ": 37.75,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 11.8350019,
        "scaleY": 7.0,
        "scaleZ": 4.041209
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "bc144d",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 55.75,
        "posY": 5.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 11.7387667,
        "scaleY": 7.0,
        "scaleZ": 4.079889
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "afc863",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -36.0,
        "posY": -9.0,
        "posZ": -18.0,
        "rotX": 6.536436E-07,
        "rotY": -2.39176334E-05,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c8edca",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -36.0,
        "posY": -9.0,
        "posZ": 18.0,
        "rotX": 6.536436E-07,
        "rotY": 90.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "393bf7",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 36.0,
        "posY": -9.0,
        "posZ": 18.0,
        "rotX": 6.536436E-07,
        "rotY": 180.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "12c65e",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 36.0,
        "posY": -9.0,
        "posZ": -18.0,
        "rotX": 6.536436E-07,
        "rotY": 270.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978795929/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "bd69bd",
      "Name": "Chinese_Checkers_Piece",
      "Transform": {
        "posX": 55.1600037,
        "posY": -0.259998322,
        "posZ": -40.1200027,
        "rotX": 0.00190076465,
        "rotY": 180.0,
        "rotZ": 0.000379891542,
        "scaleX": 1.6499995,
        "scaleY": 1.6499995,
        "scaleZ": 1.6499995
      },
      "Nickname": "Flex Table Control",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 1,
      "LuaScript": "tableHeightOffset = -9\n\nfunction onSave()\n    saved_data = JSON.encode({tid=tableImageData, cd=checkData})\n    --saved_data = \"\"\n    return saved_data\nend\n\nfunction onload(saved_data)\n    --Loads the tracking for if the game has started yet\n    if saved_data ~= \"\" then\n         local loaded_data = JSON.decode(saved_data)\n         tableImageData = loaded_data.tid\n         checkData = loaded_data.cd\n    else\n        tableImageData = {}\n        checkData = {move=false, scale=false}\n    end\n\n    --Disables interactable status of objects with GUID in list\n    for _, guid in ipairs(ref_noninteractable) do\n        local obj = getObjectFromGUID(guid)\n        if obj then obj.interactable = false end\n    end\n\n    --Establish references to table parts\n    obj_leg1 = getObjectFromGUID(\"afc863\")\n    obj_leg2 = getObjectFromGUID(\"c8edca\")\n    obj_leg3 = getObjectFromGUID(\"393bf7\")\n    obj_leg4 = getObjectFromGUID(\"12c65e\")\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\n    obj_side_top = getObjectFromGUID(\"35b95f\")\n    obj_side_bot = getObjectFromGUID(\"f938a2\")\n    obj_side_lef = getObjectFromGUID(\"9f95fd\")\n    obj_side_rig = getObjectFromGUID(\"5af8f2\")\n\n    controlActive = false\n    createOpenCloseButton()\nend\n\n\n\n--Activation/deactivation of control panel\n\n\n\n--Activated by clicking on\nfunction click_toggleControl(_, color)\n    if permissionCheck(color) then\n        if not controlActive then\n            --Activate control panel\n            controlActive = true\n            self.clearButtons()\n            createOpenCloseButton()\n            createSurfaceInput()\n            createSurfaceButtons()\n            createScaleInput()\n            createScaleButtons()\n        else\n            --Deactivate control panel\n            controlActive = false\n            self.clearButtons()\n            self.clearInputs()\n            createOpenCloseButton()\n\n        end\n    end\nend\n\n\n\n\n--Table surface control\n\n\n\n--Changes table surface\nfunction click_applySurface(_, color)\n    if permissionCheck(color) then\n        updateSurface()\n        broadcastToAll(\"New Table Image Applied\", {0.2,0.9,0.2})\n    end\nend\n\n--Saves table surface\nfunction click_saveSurface(_, color)\n    if permissionCheck(color) then\n        local nickname = self.getInputs()[1].value\n        local url = self.getInputs()[2].value\n        if nickname == \"\" then\n            --No nickname\n            broadcastToAll(\"Please supply a nickname for this save.\", {0.9,0.2,0.2})\n        else\n            --Nickname exists\n\n            if findInImageDataIndex(url, nickname) == nil then\n                --Save doesn't exist already\n                table.insert(tableImageData, {url=url, name=nickname})\n                broadcastToAll(\"Image URL saved to memory.\", {0.2,0.9,0.2})\n                --Refresh buttons\n                self.clearButtons()\n                createOpenCloseButton()\n                createSurfaceButtons()\n                createScaleButtons()\n            else\n                --Save exists already\n                broadcastToAll(\"Memory already contains a save with this Name or URL. Delete it first.\", {0.9,0.2,0.2})\n            end\n        end\n    end\nend\n\n--Loads table surface\nfunction click_loadMemory(_, color, index)\n    if permissionCheck(color) then\n        self.editInput({index=0, value=tableImageData[index].name})\n        self.editInput({index=1, value=tableImageData[index].url})\n        updateSurface()\n        broadcastToAll(\"Table Image Loaded\", {0.2,0.9,0.2})\n    end\nend\n\n--Deletes table surface\nfunction click_deleteMemory(_, color, index)\n    if permissionCheck(color) then\n        table.remove(tableImageData, index)\n        self.clearButtons()\n        createOpenCloseButton()\n        createSurfaceButtons()\n        createScaleButtons()\n        broadcastToAll(\"Element Removed from Memory\", {0.2,0.9,0.2})\n    end\nend\n\n--Updates surface from the values in the input field\nfunction updateSurface()\n    local customInfo = obj_surface.getCustomObject()\n    customInfo.diffuse = self.getInputs()[2].value\n    obj_surface.setCustomObject(customInfo)\n    obj_surface = obj_surface.reload()\nend\n\n\n\n--Table Scale control\n\n\n\n--Applies Scale to table pieces\nfunction click_applyScale(_, color)\n    if permissionCheck(color) then\n        local newWidth = tonumber(self.getInputs()[3].value)\n        local newDepth = tonumber(self.getInputs()[4].value)\n        if type(newWidth) ~= \"number\" then\n            broadcastToAll(\"Invalid Width\", {0.9,0.2,0.2})\n            return\n        elseif type(newDepth) ~= \"number\" then\n            broadcastToAll(\"Invalid Depth\", {0.9,0.2,0.2})\n            return\n        elseif newWidth<0.1 or newDepth<0.1 then\n            broadcastToAll(\"Scale cannot go below 0.1\", {0.9,0.2,0.2})\n            return\n        elseif newWidth>12 or newDepth>12 then\n            broadcastToAll(\"Scale should not go over 12 (world size limitation)\", {0.9,0.2,0.2})\n            return\n        else\n            changeTableScale(math.abs(newWidth), math.abs(newDepth))\n            broadcastToAll(\"Scale applied.\", {0.2,0.9,0.2})\n        end\n    end\nend\n\n--Checks/unchecks move box for hands\nfunction click_checkMove(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkMove\" end\n        if checkData.move == true then\n            checkData.move = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.move = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n\n--Checks/unchecks scale box for hands\n--This button was disabled for technical reasons\n--[[\nfunction click_checkScale(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkScale\" end\n        if checkData.scale == true then\n            checkData.scale = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.scale = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n]]\n\n--Alters scale of elements and moves them\nfunction changeTableScale(width, depth)\n    --Scaling factors used to translate scale to position offset\n    local width2pos = (width-1) * 18\n    local depth2pos = (depth-1) * 18\n\n    --Hand zone movement\n    if checkData.move == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                moveHandZone(Player[pc], width2pos, depth2pos)\n            end\n        end\n    end\n    --Hand zone scaling\n    --The button to enable this was disabled for technical reasons\n    if checkData.scale == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                scaleHandZone(Player[pc], width, depth)\n            end\n        end\n    end\n\n    --Resizing table elements\n    obj_side_top.setScale({width, 1, 1})\n    obj_side_bot.setScale({width, 1, 1})\n    obj_side_lef.setScale({depth, 1, 1})\n    obj_side_rig.setScale({depth, 1, 1})\n    obj_surface.setScale({width, 1, depth})\n\n    --Moving table elements to accomodate new scale\n    obj_side_lef.setPosition({-width2pos,tableHeightOffset,0})\n    obj_side_rig.setPosition({ width2pos,tableHeightOffset,0})\n    obj_side_top.setPosition({0,tableHeightOffset, depth2pos})\n    obj_side_bot.setPosition({0,tableHeightOffset,-depth2pos})\n    obj_leg1.setPosition({-width2pos,tableHeightOffset,-depth2pos})\n    obj_leg2.setPosition({-width2pos,tableHeightOffset, depth2pos})\n    obj_leg3.setPosition({ width2pos,tableHeightOffset, depth2pos})\n    obj_leg4.setPosition({ width2pos,tableHeightOffset,-depth2pos})\n    self.setPosition(obj_leg4.positionToWorld({-22.12, 8.74,-19.16}))\n    --Only enabled when changing tableHeightOffset\n    --obj_surface.setPosition({0,tableHeightOffset,0})\nend\n\n--Move hand zone, p=player reference, facts are scaling factors\nfunction moveHandZone(p, width2pos, depth2pos)\n    local widthX = obj_side_rig.getPosition().x\n    local depthZ = obj_side_top.getPosition().z\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local pos = handT.position\n        local y = handT.rotation.y\n\n        if y<45 or y>320 or y>135 and y<225 then\n            if pos.z > 0 then\n                pos.z = pos.z + depth2pos - depthZ\n            else\n                pos.z = pos.z - depth2pos + depthZ\n            end\n        else\n            if pos.x > 0 then\n                pos.x = pos.x + width2pos - widthX\n            else\n                pos.x = pos.x - width2pos + widthX\n            end\n        end\n\n        --Only enabled when changing tableHeightOffset\n        --pos.y = tableHeightOffset + 14\n\n        handT.position = pos\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n---Scales hand zones, p=player reference, facts are scaling factors\nfunction scaleHandZone(p, width, depth)\n    local widthFact = width / obj_side_top.getScale().x\n    local depthFact = depth / obj_side_lef.getScale().x\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local scale = handT.scale\n        local y = handT.rotation.y\n        if y<45 or y>320 or y>135 and y<225 then\n            scale.x = scale.x * widthFact\n        else\n            scale.x = scale.x * depthFact\n        end\n        handT.scale = scale\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n\n--Information gathering\n\n\n\n--Checks if a color is promoted or host\nfunction permissionCheck(color)\n    if Player[color].host==true or Player[color].promoted==true then\n        return true\n    else\n        return false\n    end\nend\n\n--Locates a string saved within memory file\nfunction findInImageDataIndex(...)\n    for _, str in ipairs({...}) do\n        for i, v in ipairs(tableImageData) do\n            if v.url == str or v.name == str then\n                return i\n            end\n        end\n    end\n    return nil\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n\n--Locates a button with a helper function\nfunction findButton(obj, func)\n    if func==nil then error(\"No func supplied to findButton\") end\n    for _, v in ipairs(obj.getButtons()) do\n        if func(v) then\n            return v\n        end\n    end\n    return nil\nend\n\n\n\n--Creation of buttons/inputs\n\n\n\nfunction createOpenCloseButton()\n    local tooltip = \"Open Table Control Panel\"\n    if controlActive then\n        tooltip = \"Close Table Control Panel\"\n    end\n    self.createButton({\n        click_function=\"click_toggleControl\", function_owner=self,\n        position={0,0,0}, rotation={-45,0,0}, height=400, width=400,\n        color={1,1,1,0}, tooltip=tooltip\n    })\nend\n\nfunction createSurfaceInput()\n    local currentURL = obj_surface.getCustomObject().diffuse\n    local nickname = \"\"\n    if findInImageDataIndex(currentURL) ~= nil then\n        nickname = tableImageData[findInImageDataIndex(currentURL)].name\n    end\n    self.createInput({\n        label=\"Nickname\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,2}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter nickname for table image (only used for save)\",\n        value=nickname\n    })\n    self.createInput({\n        label=\"URL\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,3}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter URL for tabletop image\",\n        value=currentURL\n    })\nend\n\nfunction createSurfaceButtons()\n    --Label\n    self.createButton({\n        label=\"Tabletop Surface Image\", click_function=\"none\",\n        position={0,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Functional\n    self.createButton({\n        label=\"Apply Image\\nTo Table\", click_function=\"click_applySurface\",\n        function_owner=self, tooltip=\"Apply URL as table image\",\n        position={2,0,4}, height=440, width=1400, font_size=200,\n    })\n    self.createButton({\n        label=\"Save Image\\nTo Memory\", click_function=\"click_saveSurface\",\n        function_owner=self, tooltip=\"Record URL into memory (requires nickname)\",\n        position={-2,0,4}, height=440, width=1400, font_size=200,\n    })\n    --Label\n    self.createButton({\n        label=\"Load From Memory\", click_function=\"none\",\n        position={0,0,5.5}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Saves, created dynamically from memory file\n    for i, memoryEntry in ipairs(tableImageData) do\n        --Load\n        local funcName = i..\"loadMemory\"\n        local func = function(x,y) click_loadMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=memoryEntry.name, click_function=funcName,\n            function_owner=self, tooltip=memoryEntry.url, font_size=200,\n            position={-0.6,0,6.5+0.5*(i-1)}, height=240, width=3300,\n        })\n        --Delete\n        local funcName = i..\"deleteMemory\"\n        local func = function(x,y) click_deleteMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=\"DELETE\", click_function=funcName,\n            function_owner=self, tooltip=\"\",\n            position={3.6,0,6.5+0.5*(i-1)}, height=240, width=600,\n            font_size=160, font_color={1,0,0}, color={0.8,0.8,0.8}\n        })\n    end\nend\n\nfunction createScaleInput()\n    self.createInput({\n        label=string.char(8644), input_function=\"none\", function_owner=self,\n        alignment=3, position={-8.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Width\",\n        value=round(obj_side_top.getScale().x, 1)\n    })\n    self.createInput({\n        label=string.char(8645), input_function=\"none\", function_owner=self,\n        alignment=3, position={-7.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Depth\",\n        value=round(obj_side_lef.getScale().x, 1)\n    })\nend\n\nfunction createScaleButtons()\n    --Labels\n    self.createButton({\n        label=\"Table Scale\", click_function=\"none\",\n        position={-8,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=string.char(8644)..\"            \"..string.char(8645),\n        click_function=\"none\",\n        position={-8,0,2}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Move Hands:\", click_function=\"none\",\n        position={-8.3,0,3}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    --Disabled due to me removing the feature for technical reasons\n    --[[\n    self.createButton({\n        label=\"Scale Hands:\", click_function=\"none\",\n        position={-8.3,0,4}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    ]]\n    --Checkboxes\n    local label = \"\"\n    if checkData.move == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkMove\",\n        function_owner=self, tooltip=\"Check to move hands when table is rescaled\",\n        position={-6.8,0,3}, height=224, width=224, font_size=200,\n    })\n    --[[\n    local label = \"\"\n    if checkData.scale == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkScale\",\n        function_owner=self, tooltip=\"Check to scale the width of hands when table is rescaled\",\n        position={-6.8,0,4}, height=224, width=224, font_size=200,\n    })\n    ]]\n    --Apply button\n    self.createButton({\n        label=\"Apply Scale\", click_function=\"click_applyScale\",\n        function_owner=self, tooltip=\"Apply width/depth to table\",\n        position={-8,0,4}, height=440, width=1400, font_size=200,\n    })\nend\n\n\n\n\n\n--Data tables\n\n\n\n\nref_noninteractable = {\n    \"afc863\",\"c8edca\",\"393bf7\",\"12c65e\",\"f938a2\",\"9f95fd\",\"35b95f\",\n    \"5af8f2\",\"4ee1f2\",\"bd69bd\"\n}\n\nref_playerColor = {\n    \"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\",\n    \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\"\n}\n\n--Dummy function, absorbs unwanted triggers\nfunction none() end\n",
      "LuaScriptState": "{\"cd\":{\"move\":true,\"scale\":false},\"tid\":[{\"name\":\"Felt - Green\",\"url\":\"https://i.imgur.com/eHXDjyy.jpg\"},{\"name\":\"Felt - Red\",\"url\":\"https://i.imgur.com/DbPelDi.jpg\"},{\"name\":\"Felt - Grey\",\"url\":\"https://i.imgur.com/N0O6aqj.jpg\"},{\"name\":\"Battle-forge\",\"url\":\"https://i.imgur.com/QAsgyBY.jpg\"}]}",
      "XmlUI": ""
    },
    {
      "GUID": "f938a2",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": -18.0,
        "rotX": -1.01777751E-13,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "9f95fd",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -36.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 2.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "35b95f",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": 18.0,
        "rotX": -1.01777751E-13,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5af8f2",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 36.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 2.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4ee1f2",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 359.983124,
        "rotY": -0.00189453643,
        "rotZ": 359.920135,
        "scaleX": 3.0,
        "scaleY": 1.0,
        "scaleZ": 2.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796176/4A5A65543B98BCFBF57E910D06EC984208223D38/",
        "DiffuseURL": "https://i.imgur.com/QAsgyBY.jpg",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f90af1",
      "Name": "3DText",
      "Transform": {
        "posX": -32.5252342,
        "posY": 1.518611,
        "posZ": -28.9014721,
        "rotX": 90.0,
        "rotY": 0.150576919,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "Models by Ringil\nhttps://steamcommunity.com/sharedfiles/filedetails/?id=2197319182",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 28
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "950d8a",
      "Name": "Chinese_Checkers_Piece",
      "Transform": {
        "posX": 37.1600037,
        "posY": -0.259998322,
        "posZ": -40.1200027,
        "rotX": 0.00190076465,
        "rotY": 180.0,
        "rotZ": 0.000379891542,
        "scaleX": 1.6499995,
        "scaleY": 1.6499995,
        "scaleZ": 1.6499995
      },
      "Nickname": "Flex Table Control",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 1,
      "LuaScript": "tableHeightOffset = -9\n\nfunction onSave()\n    saved_data = JSON.encode({tid=tableImageData, cd=checkData})\n    --saved_data = \"\"\n    return saved_data\nend\n\nfunction onload(saved_data)\n    --Loads the tracking for if the game has started yet\n    if saved_data ~= \"\" then\n         local loaded_data = JSON.decode(saved_data)\n         tableImageData = loaded_data.tid\n         checkData = loaded_data.cd\n    else\n        tableImageData = {}\n        checkData = {move=false, scale=false}\n    end\n\n    --Disables interactable status of objects with GUID in list\n    for _, guid in ipairs(ref_noninteractable) do\n        local obj = getObjectFromGUID(guid)\n        if obj then obj.interactable = false end\n    end\n\n    --Establish references to table parts\n    obj_leg1 = getObjectFromGUID(\"afc863\")\n    obj_leg2 = getObjectFromGUID(\"c8edca\")\n    obj_leg3 = getObjectFromGUID(\"393bf7\")\n    obj_leg4 = getObjectFromGUID(\"12c65e\")\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\n    obj_side_top = getObjectFromGUID(\"35b95f\")\n    obj_side_bot = getObjectFromGUID(\"f938a2\")\n    obj_side_lef = getObjectFromGUID(\"9f95fd\")\n    obj_side_rig = getObjectFromGUID(\"5af8f2\")\n\n    controlActive = false\n    createOpenCloseButton()\nend\n\n\n\n--Activation/deactivation of control panel\n\n\n\n--Activated by clicking on\nfunction click_toggleControl(_, color)\n    if permissionCheck(color) then\n        if not controlActive then\n            --Activate control panel\n            controlActive = true\n            self.clearButtons()\n            createOpenCloseButton()\n            createSurfaceInput()\n            createSurfaceButtons()\n            createScaleInput()\n            createScaleButtons()\n        else\n            --Deactivate control panel\n            controlActive = false\n            self.clearButtons()\n            self.clearInputs()\n            createOpenCloseButton()\n\n        end\n    end\nend\n\n\n\n\n--Table surface control\n\n\n\n--Changes table surface\nfunction click_applySurface(_, color)\n    if permissionCheck(color) then\n        updateSurface()\n        broadcastToAll(\"New Table Image Applied\", {0.2,0.9,0.2})\n    end\nend\n\n--Saves table surface\nfunction click_saveSurface(_, color)\n    if permissionCheck(color) then\n        local nickname = self.getInputs()[1].value\n        local url = self.getInputs()[2].value\n        if nickname == \"\" then\n            --No nickname\n            broadcastToAll(\"Please supply a nickname for this save.\", {0.9,0.2,0.2})\n        else\n            --Nickname exists\n\n            if findInImageDataIndex(url, nickname) == nil then\n                --Save doesn't exist already\n                table.insert(tableImageData, {url=url, name=nickname})\n                broadcastToAll(\"Image URL saved to memory.\", {0.2,0.9,0.2})\n                --Refresh buttons\n                self.clearButtons()\n                createOpenCloseButton()\n                createSurfaceButtons()\n                createScaleButtons()\n            else\n                --Save exists already\n                broadcastToAll(\"Memory already contains a save with this Name or URL. Delete it first.\", {0.9,0.2,0.2})\n            end\n        end\n    end\nend\n\n--Loads table surface\nfunction click_loadMemory(_, color, index)\n    if permissionCheck(color) then\n        self.editInput({index=0, value=tableImageData[index].name})\n        self.editInput({index=1, value=tableImageData[index].url})\n        updateSurface()\n        broadcastToAll(\"Table Image Loaded\", {0.2,0.9,0.2})\n    end\nend\n\n--Deletes table surface\nfunction click_deleteMemory(_, color, index)\n    if permissionCheck(color) then\n        table.remove(tableImageData, index)\n        self.clearButtons()\n        createOpenCloseButton()\n        createSurfaceButtons()\n        createScaleButtons()\n        broadcastToAll(\"Element Removed from Memory\", {0.2,0.9,0.2})\n    end\nend\n\n--Updates surface from the values in the input field\nfunction updateSurface()\n    local customInfo = obj_surface.getCustomObject()\n    customInfo.diffuse = self.getInputs()[2].value\n    obj_surface.setCustomObject(customInfo)\n    obj_surface = obj_surface.reload()\nend\n\n\n\n--Table Scale control\n\n\n\n--Applies Scale to table pieces\nfunction click_applyScale(_, color)\n    if permissionCheck(color) then\n        local newWidth = tonumber(self.getInputs()[3].value)\n        local newDepth = tonumber(self.getInputs()[4].value)\n        if type(newWidth) ~= \"number\" then\n            broadcastToAll(\"Invalid Width\", {0.9,0.2,0.2})\n            return\n        elseif type(newDepth) ~= \"number\" then\n            broadcastToAll(\"Invalid Depth\", {0.9,0.2,0.2})\n            return\n        elseif newWidth<0.1 or newDepth<0.1 then\n            broadcastToAll(\"Scale cannot go below 0.1\", {0.9,0.2,0.2})\n            return\n        elseif newWidth>12 or newDepth>12 then\n            broadcastToAll(\"Scale should not go over 12 (world size limitation)\", {0.9,0.2,0.2})\n            return\n        else\n            changeTableScale(math.abs(newWidth), math.abs(newDepth))\n            broadcastToAll(\"Scale applied.\", {0.2,0.9,0.2})\n        end\n    end\nend\n\n--Checks/unchecks move box for hands\nfunction click_checkMove(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkMove\" end\n        if checkData.move == true then\n            checkData.move = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.move = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n\n--Checks/unchecks scale box for hands\n--This button was disabled for technical reasons\n--[[\nfunction click_checkScale(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkScale\" end\n        if checkData.scale == true then\n            checkData.scale = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.scale = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n]]\n\n--Alters scale of elements and moves them\nfunction changeTableScale(width, depth)\n    --Scaling factors used to translate scale to position offset\n    local width2pos = (width-1) * 18\n    local depth2pos = (depth-1) * 18\n\n    --Hand zone movement\n    if checkData.move == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                moveHandZone(Player[pc], width2pos, depth2pos)\n            end\n        end\n    end\n    --Hand zone scaling\n    --The button to enable this was disabled for technical reasons\n    if checkData.scale == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                scaleHandZone(Player[pc], width, depth)\n            end\n        end\n    end\n\n    --Resizing table elements\n    obj_side_top.setScale({width, 1, 1})\n    obj_side_bot.setScale({width, 1, 1})\n    obj_side_lef.setScale({depth, 1, 1})\n    obj_side_rig.setScale({depth, 1, 1})\n    obj_surface.setScale({width, 1, depth})\n\n    --Moving table elements to accomodate new scale\n    obj_side_lef.setPosition({-width2pos,tableHeightOffset,0})\n    obj_side_rig.setPosition({ width2pos,tableHeightOffset,0})\n    obj_side_top.setPosition({0,tableHeightOffset, depth2pos})\n    obj_side_bot.setPosition({0,tableHeightOffset,-depth2pos})\n    obj_leg1.setPosition({-width2pos,tableHeightOffset,-depth2pos})\n    obj_leg2.setPosition({-width2pos,tableHeightOffset, depth2pos})\n    obj_leg3.setPosition({ width2pos,tableHeightOffset, depth2pos})\n    obj_leg4.setPosition({ width2pos,tableHeightOffset,-depth2pos})\n    self.setPosition(obj_leg4.positionToWorld({-22.12, 8.74,-19.16}))\n    --Only enabled when changing tableHeightOffset\n    --obj_surface.setPosition({0,tableHeightOffset,0})\nend\n\n--Move hand zone, p=player reference, facts are scaling factors\nfunction moveHandZone(p, width2pos, depth2pos)\n    local widthX = obj_side_rig.getPosition().x\n    local depthZ = obj_side_top.getPosition().z\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local pos = handT.position\n        local y = handT.rotation.y\n\n        if y<45 or y>320 or y>135 and y<225 then\n            if pos.z > 0 then\n                pos.z = pos.z + depth2pos - depthZ\n            else\n                pos.z = pos.z - depth2pos + depthZ\n            end\n        else\n            if pos.x > 0 then\n                pos.x = pos.x + width2pos - widthX\n            else\n                pos.x = pos.x - width2pos + widthX\n            end\n        end\n\n        --Only enabled when changing tableHeightOffset\n        --pos.y = tableHeightOffset + 14\n\n        handT.position = pos\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n---Scales hand zones, p=player reference, facts are scaling factors\nfunction scaleHandZone(p, width, depth)\n    local widthFact = width / obj_side_top.getScale().x\n    local depthFact = depth / obj_side_lef.getScale().x\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local scale = handT.scale\n        local y = handT.rotation.y\n        if y<45 or y>320 or y>135 and y<225 then\n            scale.x = scale.x * widthFact\n        else\n            scale.x = scale.x * depthFact\n        end\n        handT.scale = scale\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n\n--Information gathering\n\n\n\n--Checks if a color is promoted or host\nfunction permissionCheck(color)\n    if Player[color].host==true or Player[color].promoted==true then\n        return true\n    else\n        return false\n    end\nend\n\n--Locates a string saved within memory file\nfunction findInImageDataIndex(...)\n    for _, str in ipairs({...}) do\n        for i, v in ipairs(tableImageData) do\n            if v.url == str or v.name == str then\n                return i\n            end\n        end\n    end\n    return nil\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n\n--Locates a button with a helper function\nfunction findButton(obj, func)\n    if func==nil then error(\"No func supplied to findButton\") end\n    for _, v in ipairs(obj.getButtons()) do\n        if func(v) then\n            return v\n        end\n    end\n    return nil\nend\n\n\n\n--Creation of buttons/inputs\n\n\n\nfunction createOpenCloseButton()\n    local tooltip = \"Open Table Control Panel\"\n    if controlActive then\n        tooltip = \"Close Table Control Panel\"\n    end\n    self.createButton({\n        click_function=\"click_toggleControl\", function_owner=self,\n        position={0,0,0}, rotation={-45,0,0}, height=400, width=400,\n        color={1,1,1,0}, tooltip=tooltip\n    })\nend\n\nfunction createSurfaceInput()\n    local currentURL = obj_surface.getCustomObject().diffuse\n    local nickname = \"\"\n    if findInImageDataIndex(currentURL) ~= nil then\n        nickname = tableImageData[findInImageDataIndex(currentURL)].name\n    end\n    self.createInput({\n        label=\"Nickname\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,2}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter nickname for table image (only used for save)\",\n        value=nickname\n    })\n    self.createInput({\n        label=\"URL\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,3}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter URL for tabletop image\",\n        value=currentURL\n    })\nend\n\nfunction createSurfaceButtons()\n    --Label\n    self.createButton({\n        label=\"Tabletop Surface Image\", click_function=\"none\",\n        position={0,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Functional\n    self.createButton({\n        label=\"Apply Image\\nTo Table\", click_function=\"click_applySurface\",\n        function_owner=self, tooltip=\"Apply URL as table image\",\n        position={2,0,4}, height=440, width=1400, font_size=200,\n    })\n    self.createButton({\n        label=\"Save Image\\nTo Memory\", click_function=\"click_saveSurface\",\n        function_owner=self, tooltip=\"Record URL into memory (requires nickname)\",\n        position={-2,0,4}, height=440, width=1400, font_size=200,\n    })\n    --Label\n    self.createButton({\n        label=\"Load From Memory\", click_function=\"none\",\n        position={0,0,5.5}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Saves, created dynamically from memory file\n    for i, memoryEntry in ipairs(tableImageData) do\n        --Load\n        local funcName = i..\"loadMemory\"\n        local func = function(x,y) click_loadMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=memoryEntry.name, click_function=funcName,\n            function_owner=self, tooltip=memoryEntry.url, font_size=200,\n            position={-0.6,0,6.5+0.5*(i-1)}, height=240, width=3300,\n        })\n        --Delete\n        local funcName = i..\"deleteMemory\"\n        local func = function(x,y) click_deleteMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=\"DELETE\", click_function=funcName,\n            function_owner=self, tooltip=\"\",\n            position={3.6,0,6.5+0.5*(i-1)}, height=240, width=600,\n            font_size=160, font_color={1,0,0}, color={0.8,0.8,0.8}\n        })\n    end\nend\n\nfunction createScaleInput()\n    self.createInput({\n        label=string.char(8644), input_function=\"none\", function_owner=self,\n        alignment=3, position={-8.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Width\",\n        value=round(obj_side_top.getScale().x, 1)\n    })\n    self.createInput({\n        label=string.char(8645), input_function=\"none\", function_owner=self,\n        alignment=3, position={-7.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Depth\",\n        value=round(obj_side_lef.getScale().x, 1)\n    })\nend\n\nfunction createScaleButtons()\n    --Labels\n    self.createButton({\n        label=\"Table Scale\", click_function=\"none\",\n        position={-8,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=string.char(8644)..\"            \"..string.char(8645),\n        click_function=\"none\",\n        position={-8,0,2}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Move Hands:\", click_function=\"none\",\n        position={-8.3,0,3}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    --Disabled due to me removing the feature for technical reasons\n    --[[\n    self.createButton({\n        label=\"Scale Hands:\", click_function=\"none\",\n        position={-8.3,0,4}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    ]]\n    --Checkboxes\n    local label = \"\"\n    if checkData.move == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkMove\",\n        function_owner=self, tooltip=\"Check to move hands when table is rescaled\",\n        position={-6.8,0,3}, height=224, width=224, font_size=200,\n    })\n    --[[\n    local label = \"\"\n    if checkData.scale == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkScale\",\n        function_owner=self, tooltip=\"Check to scale the width of hands when table is rescaled\",\n        position={-6.8,0,4}, height=224, width=224, font_size=200,\n    })\n    ]]\n    --Apply button\n    self.createButton({\n        label=\"Apply Scale\", click_function=\"click_applyScale\",\n        function_owner=self, tooltip=\"Apply width/depth to table\",\n        position={-8,0,4}, height=440, width=1400, font_size=200,\n    })\nend\n\n\n\n\n\n--Data tables\n\n\n\n\nref_noninteractable = {\n    \"afc863\",\"c8edca\",\"393bf7\",\"12c65e\",\"f938a2\",\"9f95fd\",\"35b95f\",\n    \"5af8f2\",\"4ee1f2\",\"bd69bd\"\n}\n\nref_playerColor = {\n    \"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\",\n    \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\"\n}\n\n--Dummy function, absorbs unwanted triggers\nfunction none() end\n",
      "LuaScriptState": "{\"cd\":{\"move\":true,\"scale\":false},\"tid\":[{\"name\":\"Felt - Green\",\"url\":\"https://i.imgur.com/eHXDjyy.jpg\"},{\"name\":\"Felt - Red\",\"url\":\"https://i.imgur.com/DbPelDi.jpg\"},{\"name\":\"Felt - Grey\",\"url\":\"https://i.imgur.com/N0O6aqj.jpg\"}]}",
      "XmlUI": ""
    },
    {
      "GUID": "83518f",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": -18.0,
        "rotX": -1.01777751E-13,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 2.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "7fe2ed",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -18.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 2.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/879750610978796471/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e4f814",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 47.789917,
        "posY": 1.507059,
        "posZ": 29.9700317,
        "rotX": 0.0168731511,
        "rotY": 179.999741,
        "rotZ": 0.07987603,
        "scaleX": 0.450000465,
        "scaleY": 0.450000465,
        "scaleZ": 0.450000465
      },
      "Nickname": "Imperitor Titan",
      "Description": "WS:2\nBS;4\nS:D\nFR:15\nSI:15\nRE:14\nI:1\nA:3\nHP:30",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/941706723453593942/6D552360DF557DE6675F50D9E12477A0804AFE29/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/941706723453586577/7E623E903B10F178EDF9CCB890B9FEA04EB8618B/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/81471091791141795/BDD5C8831B3C7F5A1377816A88F374A6CA57BAC3/",
        "Convex": true,
        "MaterialIndex": 2,
        "TypeIndex": 1,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.7372549,
            "g": 0.7372549,
            "b": 0.7372549
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "20b6fc",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.8097669,
        "posY": 1.47061908,
        "posZ": -13.7699547,
        "rotX": 0.01688148,
        "rotY": 179.996246,
        "rotZ": 0.07987538,
        "scaleX": 1.39999974,
        "scaleY": 1.39999974,
        "scaleZ": 1.39999974
      },
      "Nickname": "Warhound Titan",
      "Description": "WS:2\nBS:2\nS:10\nFR:14\nSI:13\nRE:12\nI:4\nA:1 (It can fire two weapons however)\nHP:9",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1704032198792064220/1DC4F347E714ADCF72678CDA360FC79B852091EC/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/90469323227230331/DE0850CF6DD3454714A41F08B5880870A9DA1B8E/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1704032198792064566/13A5B8680E4BC8A866C5B04591C737527F5F7B64/",
        "Convex": true,
        "MaterialIndex": 2,
        "TypeIndex": 1,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.7372549,
            "g": 0.7372549,
            "b": 0.7372549
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 7.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "71a8d0",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 13.7698021,
        "posY": 1.4754231,
        "posZ": -5.669958,
        "rotX": 0.0168763716,
        "rotY": 179.9987,
        "rotZ": 0.07987561,
        "scaleX": 1.24999988,
        "scaleY": 1.24999988,
        "scaleZ": 1.24999988
      },
      "Nickname": "Reaver Titan",
      "Description": "WS:2\nBS:4\nS:10\nFR:14\nSI:14\nRE:13\nI:2\nA:2\nHP:18",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1704032198792084999/B8A1B6678A5BCA14AFC54D8CDD07A90DBAB2C667/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/952961283026306445/948872B40CE0034E054EF96FD6BD77BB232A4E24/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1704032198792085462/807C8A9F567B94ACE8FB87D952DB6C3F41D9CE95/",
        "Convex": true,
        "MaterialIndex": 2,
        "TypeIndex": 1,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.7372549,
            "g": 0.7372549,
            "b": 0.7372549
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 7.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "be5efb",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.809815645,
        "posY": 1.49671566,
        "posZ": 7.290041,
        "rotX": 0.0168767516,
        "rotY": 179.9972,
        "rotZ": 0.07987611,
        "scaleX": 1.19999993,
        "scaleY": 1.19999993,
        "scaleZ": 1.19999993
      },
      "Nickname": "Warlord Titan",
      "Description": "WS:2\nBS;4\nS:D\nFR:15\nSI:15\nRE:14\nI:1\nA:3\nHP:30",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1704032198792129727/03CB3B45FAA61C10A96EEBB84A007EE1732122F1/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/849344881098456925/47C3CD2F1E0B6379C1D2842AD997DDEE763A0DC2/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1704032198792130215/2134B840876685971989301A3EC7BFC1CD93EB4E/",
        "Convex": true,
        "MaterialIndex": 2,
        "TypeIndex": 1,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.7372549,
            "g": 0.7372549,
            "b": 0.7372549
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "7d5c1c",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 10000.0,
        "posY": 10002.2793,
        "posZ": 10000.0,
        "rotX": 0.05455172,
        "rotY": 149.999863,
        "rotZ": 0.06075554,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "2/2 Vanguard Veteran",
      "Description": "[56f442]M  WS BS  S   T  W   A  LD     SV[-][-]\r\n 6\"  3+  3+  4   4   2   2   8      3+\r\n[e85545]Weapons[-]\r\n[c6c930]Frag grenades\r\n[-]6\" Grenade D6 S:3 AP:0 D:1 Sp?:*\r\n[c6c930]Krak grenades\r\n[-]6\" Grenade 1 S:6 AP:-1 D:D3 Sp?:-\r\n[c6c930]Thunder hammer\r\n[-] Melee S:x2 AP:-2 D:3 Sp?:*\r\n[dc61ed]Abilities[-]\r\nStorm shield\r\nAngels of Death\r\nCombat Squads\r\n",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1704031902106549780/5A11BBA17B940E08F2ABAA089EAD8B19D51B8C4D/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/787504189454052402/D5D698978DCF141BB32D603D2BFBA6BBABFCB718/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/787504189454001135/584FB18C497C094EB730BFC3AC416126ED9E924B/",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "function uiSub(uiTable, target, value)\n  if uiTable[\"attributes\"] then\n    for k,v in pairs(uiTable[\"attributes\"]) do\n      uiTable[\"attributes\"][k] = nil\n      uiTable[\"attributes\"][string.gsub(k, target, value)] = string.gsub(v, target, value)\n    end\n  end\n  if uiTable[\"children\"] then\n    for k,child in pairs(uiTable[\"children\"]) do\n      uiTable[\"children\"][k] = uiSub(child, target, value)\n    end\n  end\n  return uiTable\nend\n\nfunction createUI(uiId, playerColor)\n  local guid = self.getGUID()\n  local uiTable = uiSub(\n                  uiSub(\n                  uiSub({tag = \"Panel\", attributes = { id = \"thepanelid\"\n                  , visibility = \"thevisibility\"\n                  , active = \"false\"\n                  , width = \"700\"\n                  , height = \"450\"\n                  , returnToOriginalPositionWhenReleased = \"false\"\n                  , allowDragging = \"true\"\n                  , color = \"#FFFFFF\"\n                  , childForceExpandWidth = \"false\"\n                  , childForceExpandHeight = \"false\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"true\"\n                  , width = \"700\"\n                  , childForceExpandWidth = \"false\"\n                  , childForceExpandHeight = \"false\" }, children = { {tag = \"Row\", attributes = { preferredHeight = \"30\" }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMinSize = \"6\"\n                  , resizeTextMaxSize = \"30\"\n                  , fontSize = \"25\"\n                  , rectAlignment = \"MiddleCenter\"\n                  , text = \"Vanguard Veteran Squad\"\n                  , width = \"700\" }, children = {  }}\n                  , {tag = \"HorizontalLayout\", attributes = { rectAlignment = \"UpperRight\"\n                  , height = \"30\"\n                  , width = \"30\" }, children = { {tag = \"Button\", attributes = { id = \"theguid-close\"\n                  , class = \"topButtons\"\n                  , color = \"#990000\"\n                  , textColor = \"#FFFFFF\"\n                  , text = \"X\"\n                  , height = \"30\"\n                  , width = \"30\"\n                  , onClick = \"theguid/closeUI\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-scrollRow\"\n                  , preferredHeight = \"360\" }, children = { {tag = \"VerticalScrollView\", attributes = { id = \"theguid-scrollView\"\n                  , scrollSensitivity = \"30\"\n                  , height = \"360\"\n                  , width = \"700\" }, children = { {tag = \"TableLayout\", attributes = { padding = \"10\"\n                  , cellPadding = \"5\"\n                  , horizontalOverflow = \"Wrap\"\n                  , columnWidths = \"700\"\n                  , autoCalculateHeight = \"true\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-rowtab-0\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"700\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-0-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Cost: 360pts 12 PL\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-rowtab-1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"700\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-1-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Keywords: Faction: Adeptus Astartes, Infantry, Faction: Imperium, Vanguard Veteran Squad, Core, Melta Bombs, Elites\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-rowtab-2\"\n                  , preferredHeight = \"120\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"82 617\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-2-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Abilities\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Description\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-2-row-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Storm shield\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"The bearer has a 4+ invulnerable save. In addition, add 1 to armour saving throws made for the bearer.\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-rowtab-3\"\n                  , preferredHeight = \"200\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"131 63 63 63 63 63 63 63 63 63\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-3-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Unit\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"M\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"WS\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"BS\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"S\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"T\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"W\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"A\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Ld\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Save\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-3-row-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Vanguard Veteran\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"8\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-3-row-1\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Vanguard Veteran Sergeant\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"9\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-rowtab-4\"\n                  , preferredHeight = \"280\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"60 51 51 51 51 51 380\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-4-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Weapon\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Range\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Type\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"S\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"AP\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"D\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Abilities\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-4-row-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Frag grenades\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Grenade D6\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"0\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Blast.\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-4-row-1\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Krak grenades\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Grenade 1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"D3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-4-row-2\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Thunder hammer\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Melee\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Melee\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"x2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Each time an attack roll is made with this weapon, subtract 1 from the attack's hit roll\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }} }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { preferredHeight = \"60\" }, children = { {tag = \"Text\", attributes = { id = \"theguid-modelcount\"\n                  , padding = \"5\"\n                  , height = \"60\"\n                  , alignment = \"UpperLeft\"\n                  , text = \"Default\"\n                  , rectAlignment = \"UpperLeft\"\n                  , width = \"350\"\n                  , resizeTextForBestFit = \"true\"\n                  , horizontalOverflow = \"Wrap\"\n                  , resizeTextMinSize = \"6\"\n                  , fontSize = \"18\"\n                  , resizeTextMaxSize = \"30\" }, children = {  }} }}\n                  , {tag = \"Row\", attributes = { preferredHeight = \"22\" }, children = { {tag = \"HorizontalLayout\", attributes = { rectAlignment = \"UpperRight\"\n                  , preferredHeight = \"22\" }, children = { {tag = \"Button\", attributes = { id = \"theguid-coherency-Red\"\n                  , height = \"22\"\n                  , color = \"#BB2222\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitRed\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Green\"\n                  , height = \"22\"\n                  , color = \"#22BB22\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitGreen\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Blue\"\n                  , height = \"22\"\n                  , color = \"#2222BB\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitBlue\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Purple\"\n                  , height = \"22\"\n                  , color = \"#BB22BB\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitPurple\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Yellow\"\n                  , height = \"22\"\n                  , color = \"#DDDD22\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitYellow\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-White\"\n                  , height = \"22\"\n                  , color = \"#FFFFFF\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitWhite\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Orange\"\n                  , height = \"22\"\n                  , color = \"#DD6633\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitOrange\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Teal\"\n                  , height = \"22\"\n                  , color = \"#29D9D9\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitTeal\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Pink\"\n                  , height = \"22\"\n                  , color = \"#DD77CC\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitPink\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-None\"\n                  , height = \"22\"\n                  , color = \"#BBBBBB\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitNone\" }, children = {  }} }} }} }} }}, \"thepanelid\", uiId),\n                              \"theguid\", guid),\n                              \"thevisibility\", playerColor)\n  return uiTable\nend\n\nfunction onLoad()\n  self.setVar(\"desc-id\", desc())\n  self.setVar(\"isMaster\", true)\n  for k,v in pairs(getAllObjects()) do\n    if v.getVar(\"desc-id\") == desc() and v.getVar(\"isMaster\") and v.getGUID() ~= self.getGUID() then\n      if v.getPosition().x > 9999 and v.getPosition().z > 9999 then\n        log(\"Destroying previous master for this unit: \" .. desc())\n        v.destruct()\n      else\n        log(\"Usurping previous master for this unit: \" .. desc())\n        v.setVar(\"isMaster\", false)\n      end\n    end\n  end\nend\n\nfunction copyUITable(uiTable)\n  local result = {}\n  for k, element in pairs(uiTable) do\n    local newElement = {}\n    newElement[\"tag\"] = element[\"tag\"]\n    if element[\"value\"] ~= nil then\n      newElement[\"value\"], times = string.gsub(element[\"value\"],\"[ ]+\",\" \")\n    end\n    newElement[\"attributes\"] = element[\"attributes\"]\n    newElement[\"children\"] = {}\n    if element[\"children\"] ~= nil then\n      newElement[\"children\"] = copyUITable(element[\"children\"])\n    end\n    table.insert(result, newElement)\n  end\n  return result\nend\n\n\nfunction loadUI(playerColor)\n  local panelId = createName(playerColor)\n  local uiTable = createUI(panelId, playerColor)\n  local currentUI = UI.getXmlTable()\n  local inserted = false\n  for k,element in pairs(currentUI) do\n    if element[\"attributes\"] ~= nil and element[\"attributes\"][\"id\"] == panelId then\n      currentUI[k][\"children\"] = uiTable[\"children\"]\n      inserted = true\n    end\n  end\n  if not inserted then\n    table.insert(currentUI, uiTable)\n  end\n  local result = copyUITable(currentUI)\n  UI.setXmlTable(result)\nend\n\nfunction unloadUI(playerColor)\n  local panelId = createName(playerColor)\n  local uiTable = UI.getXmlTable()\n  local panelIndex = -1\n  for index, element in pairs(uiTable) do\n    if element[\"attributes\"][\"id\"] == panelId then\n      panelIndex = index\n      break\n    end\n  end\n  if panelIndex >= 0 then\n    local el = uiTable[panelIndex]\n  end\n  uiCreated[playerColor] = false\nend\n\nuiCreated = {}\n\ntimesActivated = 0\n\nvalidBaseMillis = {\n  {x = 25, z = 25},\n  {x = 30, z = 30},\n  {x = 32, z = 32},\n  {x = 40, z = 40},\n  {x = 50, z = 50},\n  {x = 55, z = 55},\n  {x = 60, z = 60},\n  {x = 100, z = 100},\n  {x = 25, z = 25},\n  {x = 25, z = 75},\n  {x = 75, z = 25},\n  {x = 120, z = 92},\n  {x = 92, z = 120},\n  {x = 170, z = 105},\n  {x = 105, z = 170},\n}\n\nfunction assignBase(inc, model)\n if Global.getTable(\"bs2tts-saved-bases\") == nil then\n  Global.setTable(\"bs2tts-saved-bases\", {})\n end\n local baseMap = Global.getTable(\"bs2tts-saved-bases\")\n local meshFile = model.getCustomObject().mesh\n if baseMap[meshFile] == nil then\n  log(\"Initing base map\")\n  baseMap[meshFile] = 0\n end\n local index = baseMap[meshFile]\n local newIndex = (index + inc) % #validBaseMillis\n log(\"Base map index is now: \" .. tostring(newIndex))\n log(\"Base millis are: \" .. tostring(validBaseMillis[newIndex+1][\"x\"]) .. \" \" .. tostring(validBaseMillis[newIndex+1][\"z\"]))\n baseMap[meshFile] = newIndex\n Global.setTable(\"bs2tts-saved-bases\", baseMap)\nend\n\nfunction determineBase(model)\n  local chosenBase =  {x = 25, z = 25}\n  local milliToInch = 0.0393701\n  \n  if Global.getTable(\"bs2tts-saved-bases\") and Global.getTable(\"bs2tts-saved-bases\")[model.getCustomObject().mesh] then\n    chosenBase = validBaseMillis[Global.getTable(\"bs2tts-saved-bases\")[model.getCustomObject().mesh] + 1]\n    chosenBase = {x = (chosenBase.x * milliToInch)/2, z = (chosenBase.z * milliToInch)/2}\n  else\n    local bounds = model.getBoundsNormalized()\n    local xBounds = bounds.size.x\n    local zBounds = bounds.size.z\n    local closestSum = 10000000000\n    log(bounds)\n    for k, base in pairs(validBaseMillis) do\n      local baseInchX = (milliToInch - 0.001) * base.x\n      local baseInchZ = (milliToInch - 0.001) * base.z\n      if xBounds > baseInchX and zBounds > baseInchZ then\n        local distSum = (xBounds - baseInchX) + (zBounds - baseInchZ)\n        if distSum < closestSum then\n          closestSum = distSum\n          chosenBase = base\n        end\n      end\n    end\n    log(chosenBase)\n    if chosenBase == nil then\n      chosenBase = {x = xBounds/2, z = zBounds/2}\n    else\n      chosenBase = {x = (chosenBase.x * milliToInch)/2, z = (chosenBase.z * milliToInch)/2}\n    end\n  end\n  return chosenBase\nend\n\nfunction onScriptingButtonDownTable(params)\n  onScriptingButtonDown(params.index, params.peekerColor)\nend\n\nfunction onScriptingButtonDown(index, peekerColor)\n  local player = Player[peekerColor]\n  local name = createName(peekerColor)\n  if (self.getVar(\"isMaster\") and player.getHoverObject() and player.getHoverObject().getVar(\"desc-id\") == desc()) or\n      (#player.getSelectedObjects() > 0 and player.getSelectedObjects()[1].getVar(\"desc-id\") == desc()) then\n    local target = player.getHoverObject() or  player.getSelectedObjects()[1]\n    if index == 1 then\n        loadUI(peekerColor)\n        Wait.frames(function()\n          updateModelCount()\n          UI.setAttribute(createName(peekerColor), \"active\", true)\n        end, 2)\n    end\n    if index == 2 or index == 3 then\n      local inc = index == 2 and -1 or 1\n      local name = target.getName()\n      local current, total = string.gmatch(name,\"([0-9]+)/([0-9]+)\")()\n      current = math.max(tonumber(current) + inc,0)\n      local newName = string.gsub(name, \"([0-9]+)/([0-9]+)\", tostring(current) .. \"/\" .. total)\n      target.setName(newName)\n    end\n    if index == 4 or index == 5 or index == 8 then\n      local inc = index == 4 and 1 or -1\n      if index == 8 then\n        inc = 0\n      end\n      if target.getVar(\"bs2tts-aura-circle\") == nil then\n        target.setVar(\"bs2tts-aura-circle\", 0)\n      end\n      local newRadius = math.max(target.getVar(\"bs2tts-aura-circle\") + inc,0)\n      target.setVar(\"bs2tts-aura-circle\", newRadius)\n      local circ = {}\n      local base = {}\n      local baseRadiuses = determineBase(target)\n      if newRadius > 0 then\n        circ = getCircleVectorPoints(newRadius, baseRadiuses.x, baseRadiuses.z, target)\n        base = getCircleVectorPoints(0, baseRadiuses.x, baseRadiuses.z, target)\n      end\n\n      target.setVectorLines({\n        {\n            points    = circ,\n            color     = highlighting or {1,0,1},\n            thickness = 0.125 * 1/(target.getScale().x),\n            rotation  = {0,0,0},\n        },\n        {\n            points    = base,\n            color     = highlighting or {1,0,1},\n            thickness = 0.1 * 1/(target.getScale().x),\n            rotation  = {0,0,0},\n        }\n      })\n      broadcastToAll(\"Measuring \"..tostring(newRadius)..\"\\\"\")\n    end\n    if index == 6 or index == 7 then\n      local inc = 1\n      if index == 7 then\n        inc = -1\n      end\n      assignBase(inc, target)\n      onScriptingButtonDown(8, peekerColor)\n    end\n  end\nend\n\nfunction onObjectDrop(playerColor, obj)\n  scheduleUpdateIfInUnit(obj)\nend\n\nfunction onObjectDestroy(obj)\n  if obj.getGUID() ~= self.getGUID() then\n    scheduleUpdateIfInUnit(obj)\n  end\nend\n\nfunction scheduleUpdateIfInUnit(obj)\nif obj.getVar(\"desc-id\") == desc() then\n  collectUnitModels()\n  local id = desc() .. \"countModels\"\n  Timer.destroy(id)\n  Timer.create(\n  {\n    identifier = id,\n    function_name = \"updateModelCount\",\n    parameters = {},\n    delay = 0.2\n  }\n)\nend\nend\n\nfunction distance2D(point1, point2)\n  local x = point1.x - point2.x\n  local z = point1.z - point2.z\n  return math.sqrt(x * x + z * z)\nend\n\nunitModels = nil\nunitModelCount = 0\nunitUprightModelCount = 0\n\nfunction collectUnitModels()\n  unitModels = {}\n  unitModelCount = 0\n  unitUprightModelCount = 0\n  for k,v in pairs(getAllObjects()) do\n    if v.getVar(\"desc-id\") == desc() then\n      table.insert(unitModels, v)\n      unitModelCount = unitModelCount + 1\n      if not v.is_face_down then\n        unitUprightModelCount = unitUprightModelCount + 1\n      end\n    end\n  end\n  log(\"Collected \" .. tostring(unitUprightModelCount) .. \" upright models for this unit\")\nend\n\nfunction operateOnModels(fn)\n  if not unitModels then\n    collectUnitModels()\n  end\n  local originModel = nil\n  local dist = 100000000000\n  for k, model in pairs(unitModels) do\n    local newDist = distance2D({x=0,y=0,z=0}, model.getPosition())\n    if not model.is_face_down and newDist < dist then\n      originModel = model\n      dist = newDist\n    end\n  end\n  local seenModels = {}\n  searchModels(originModel, seenModels, fn)\nend\n\nfunction updateModelCount()\n  collectUnitModels()\n  local modelCounts = {}\n  if unitModels then\n    for k, model in pairs(unitModels) do\n      model.highlightOff()\n    end\n  end\n\n  local getModelNames = function(model)\n    if not modelCounts[model.getName()] then\n      modelCounts[model.getName()] = 0\n    end\n    modelCounts[model.getName()] = modelCounts[model.getName()] + 1\n    if highlighting then\n      model.highlightOn(highlighting)\n    end\n  end\n\n  operateOnModels(getModelNames)\n  local label = \"\"\n  local keys = {}\n  for k in pairs(modelCounts) do table.insert(keys, k) end\n  table.sort(keys)\n\n  for index,k in pairs(keys) do\n    local v = modelCounts[k]\n    modelName = string.gsub(k, \"[0-9]+/[0-9]+\",\"\")\n    label = label .. modelName .. \" - \" .. tostring(v) .. \"\\n\"\n  end\n  local theid = self.getGUID() .. \"-modelcount\"\n  UI.setAttribute(theid, \"text\", label )\nend\n\nfunction getCenterDist(obj)\n  local boundsSize = obj.getBoundsNormalized().size\n  local longest = math.max(boundsSize.x, boundsSize.z)\n  return longest/2\nend\n\nfunction arrToS(a)\n  result = \"[] \"\n  for i, k in pairs(a) do\n    result = result .. tostring(k) .. \",\"\n  end\n  result = result .. \" ]\"\n  return result\nend\n\nfunction searchModels(origin, seen, fn)\n  local modelsInRange = 0\n  local rangeModelGUIDS = {}\n  seen[origin.getGUID()] = true\n  for k, model in pairs(unitModels) do\n    if not model.is_face_down and model.getGUID() ~= origin.getGUID() then\n      local originCenterDist = getCenterDist(origin)\n      local modelCenterDist = getCenterDist(model)\n      local dist = distance2D(origin.getPosition(), model.getPosition())\n      if dist < (2.05 + originCenterDist + modelCenterDist) then\n        modelsInRange = modelsInRange + 1\n        table.insert(rangeModelGUIDS, model.getGUID())\n        if (unitUprightModelCount >= 6 and modelsInRange == 2) or (unitUprightModelCount < 6 and modelsInRange == 1) then\n          log(\"Model \" .. tostring(origin.getGUID()) .. \" is in range of \" .. tostring(modelsInRange) .. \" models, namely: \" .. arrToS(rangeModelGUIDS))\n          fn(origin)\n        end\n        if not seen[model.getGUID()] then\n          searchModels(model, seen, fn, modelCount)\n        end\n      end\n    end\n  end\nend\n\nhighlighting = false\n\nfunction highlightUnitRed() highlightUnit(\"Red\") end\nfunction highlightUnitGreen() highlightUnit(\"Green\") end\nfunction highlightUnitBlue() highlightUnit(\"Blue\") end\nfunction highlightUnitPurple() highlightUnit(\"Purple\") end\nfunction highlightUnitYellow() highlightUnit(\"Yellow\") end\nfunction highlightUnitWhite() highlightUnit(\"White\") end\nfunction highlightUnitOrange() highlightUnit(\"Orange\") end\nfunction highlightUnitTeal() highlightUnit(\"Teal\") end\nfunction highlightUnitPink() highlightUnit(\"Pink\") end\n\nfunction highlightUnitNone()\n  highlighting = false\n  updateModelCount()\nend\n\nfunction highlightUnit(color)\n  if highlighting ~= color then\n    highlighting = color\n  else\n    highlighting = false\n  end\n  updateModelCount()\nend\n\nfunction onDestroy()\n  local id = desc() .. \"countModels\"\n  Timer.destroy(id)\n  collectUnitModels()\n  if #unitModels > 1 then\n    local newobj = self.clone({position = {x = 10000, y = 10000, z = 10000}})\n    newobj.setLock(true)\n  end\n  for k,v in pairs(Player.getColors()) do\n    UI.hide(createName(v))\n  end\nend\n\nfunction closeUI(player, val, id)\n  local peekerColor = player.color\n  UI.setAttribute(createName(peekerColor), \"active\", false)\nend\n\nfunction desc()\n  return \"26e04ac4:86ba-fe7a-e3d5-5bce\"\nend\n\nfunction createName(color)\n  local guid = self.getGUID()\n  return \"bs2tts\" .. \"-\" .. color\nend\n\nfunction rotateVector2d(vec, degrees)\n  local sin,cos,toRads = math.sin, math.cos, math.rad\n  local result = {\n    x = vec.x * cos(toRads(degrees)) - vec.z * sin(toRads(degrees)),\n    z = vec.x * sin(toRads(degrees)) + vec.z * cos(toRads(degrees)),\n    y = vec.y\n  }\n  return result\nend\n\nfunction getCircleVectorPoints(radius,baseX, baseZ, obj)\n    local result = {}\n    local scaleFactor = 1/obj.getScale().x\n    local rotationDegrees =  obj.getRotation().y\n    local steps = 64\n    local degrees,sin,cos,toRads = 360/steps, math.sin, math.cos, math.rad\n    for i = 0,steps do\n        table.insert(result,{\n            x = cos(toRads(degrees*i))*((radius+baseX)*scaleFactor),\n            z = sin(toRads(degrees*i))*((radius+baseZ)*scaleFactor),\n            y = 1\n        })\n    end\n    return result\nend\n",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ea3562",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 10000.0,
        "posY": 10003.7061,
        "posZ": 10000.0,
        "rotX": 0.00427663838,
        "rotY": 180.002548,
        "rotZ": 0.0202275217,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "2/2 Assault Intercessor",
      "Description": "[56f442]M  WS BS  S   T  W   A  LD     SV[-][-]\r\n 6\"  3+  3+  4   4   2   2   7      3+\r\n[e85545]Weapons[-]\r\n[c6c930]Astartes Chainsword\r\n[-] Melee S:User AP:-1 D:1 Sp?:*\r\n[c6c930]Heavy Bolt Pistol\r\n[-]18\" Pistol 1 S:4 AP:-1 D:1 Sp?:-\r\n[c6c930]Frag grenades\r\n[-]6\" Grenade D6 S:3 AP:0 D:1 Sp?:*\r\n[c6c930]Krak grenades\r\n[-]6\" Grenade 1 S:6 AP:-1 D:D3 Sp?:-\r\n[dc61ed]Abilities[-]\r\nCombat Squads\r\nAngels of Death\r\n",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": false,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1299801906153554514/38FE80DAAFABD2E9D686C0A6A374EDFA3205E24C/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/779609027856422042/9C76B4B4DB71FA77A551E200D3096D03C1688B1F/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/787504189454001135/584FB18C497C094EB730BFC3AC416126ED9E924B/",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 1,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "function uiSub(uiTable, target, value)\n  if uiTable[\"attributes\"] then\n    for k,v in pairs(uiTable[\"attributes\"]) do\n      uiTable[\"attributes\"][k] = nil\n      uiTable[\"attributes\"][string.gsub(k, target, value)] = string.gsub(v, target, value)\n    end\n  end\n  if uiTable[\"children\"] then\n    for k,child in pairs(uiTable[\"children\"]) do\n      uiTable[\"children\"][k] = uiSub(child, target, value)\n    end\n  end\n  return uiTable\nend\n\nfunction createUI(uiId, playerColor)\n  local guid = self.getGUID()\n  local uiTable = uiSub(\n                  uiSub(\n                  uiSub({tag = \"Panel\", attributes = { id = \"thepanelid\"\n                  , visibility = \"thevisibility\"\n                  , active = \"false\"\n                  , width = \"700\"\n                  , height = \"450\"\n                  , returnToOriginalPositionWhenReleased = \"false\"\n                  , allowDragging = \"true\"\n                  , color = \"#FFFFFF\"\n                  , childForceExpandWidth = \"false\"\n                  , childForceExpandHeight = \"false\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"true\"\n                  , width = \"700\"\n                  , childForceExpandWidth = \"false\"\n                  , childForceExpandHeight = \"false\" }, children = { {tag = \"Row\", attributes = { preferredHeight = \"30\" }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMinSize = \"6\"\n                  , resizeTextMaxSize = \"30\"\n                  , fontSize = \"25\"\n                  , rectAlignment = \"MiddleCenter\"\n                  , text = \"Assault Intercessor Squad\"\n                  , width = \"700\" }, children = {  }}\n                  , {tag = \"HorizontalLayout\", attributes = { rectAlignment = \"UpperRight\"\n                  , height = \"30\"\n                  , width = \"30\" }, children = { {tag = \"Button\", attributes = { id = \"theguid-close\"\n                  , class = \"topButtons\"\n                  , color = \"#990000\"\n                  , textColor = \"#FFFFFF\"\n                  , text = \"X\"\n                  , height = \"30\"\n                  , width = \"30\"\n                  , onClick = \"theguid/closeUI\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-scrollRow\"\n                  , preferredHeight = \"360\" }, children = { {tag = \"VerticalScrollView\", attributes = { id = \"theguid-scrollView\"\n                  , scrollSensitivity = \"30\"\n                  , height = \"360\"\n                  , width = \"700\" }, children = { {tag = \"TableLayout\", attributes = { padding = \"10\"\n                  , cellPadding = \"5\"\n                  , horizontalOverflow = \"Wrap\"\n                  , columnWidths = \"700\"\n                  , autoCalculateHeight = \"true\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-rowtab-0\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"700\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-0-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Cost: 105pts 5 PL\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-rowtab-1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"700\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-1-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Keywords: Faction: Imperium, Faction: Adeptus Astartes, Primaris, Infantry, Assault Intercessor Squad, Core, Intercessors, Troops\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-rowtab-2\"\n                  , preferredHeight = \"200\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"122 64 64 64 64 64 64 64 64 64\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-2-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Unit\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"M\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"WS\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"BS\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"S\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"T\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"W\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"A\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Ld\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Save\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-2-row-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Assault Intercessor\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"7\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-2-row-1\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Assault Intercessor Sgt\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"8\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3+\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-rowtab-3\"\n                  , preferredHeight = \"440\" }, children = { {tag = \"TableLayout\", attributes = { autoCalculateHeight = \"false\"\n                  , cellPadding = \"5\"\n                  , columnWidths = \"80 50 50 50 50 50 366\" }, children = { {tag = \"Row\", attributes = { id = \"theguid-3-header-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"40\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Weapon\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Range\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Type\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"S\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"AP\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"D\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"20\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Abilities\"\n                  , fontStyle = \"Bold\"\n                  , fontSize = \"20\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-3-row-0\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Astartes Chainsword\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Melee\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Melee\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"User\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"When the bearer fights, it makes 1 additional attack with this weapon. \"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-3-row-1\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Frag grenades\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Grenade D6\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"0\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Blast.\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-3-row-2\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Heavy Bolt Pistol\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"18\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Pistol 1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"4\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-3-row-3\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Krak grenades\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\\u{201D}\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Grenade 1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"6\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-1\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"D3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }}\n                  , {tag = \"Row\", attributes = { id = \"theguid-3-row-4\"\n                  , flexibleHeight = \"1\"\n                  , preferredHeight = \"80\" }, children = { {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Power fist\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Melee\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Melee\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"x2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"-3\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"2\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }}\n                  , {tag = \"Cell\", attributes = {  }, children = { {tag = \"Text\", attributes = { resizeTextForBestFit = \"true\"\n                  , resizeTextMaxSize = \"18\"\n                  , resizeTextMinSize = \"6\"\n                  , text = \"Each time an attack is made with this weapon, subtract 1 from that attackâs hit roll.\"\n                  , fontStyle = \"Normal\"\n                  , fontSize = \"18\" }, children = {  }} }} }} }} }} }} }} }}\n                  , {tag = \"Row\", attributes = { preferredHeight = \"60\" }, children = { {tag = \"Text\", attributes = { id = \"theguid-modelcount\"\n                  , padding = \"5\"\n                  , height = \"60\"\n                  , alignment = \"UpperLeft\"\n                  , text = \"Default\"\n                  , rectAlignment = \"UpperLeft\"\n                  , width = \"350\"\n                  , resizeTextForBestFit = \"true\"\n                  , horizontalOverflow = \"Wrap\"\n                  , resizeTextMinSize = \"6\"\n                  , fontSize = \"18\"\n                  , resizeTextMaxSize = \"30\" }, children = {  }} }}\n                  , {tag = \"Row\", attributes = { preferredHeight = \"22\" }, children = { {tag = \"HorizontalLayout\", attributes = { rectAlignment = \"UpperRight\"\n                  , preferredHeight = \"22\" }, children = { {tag = \"Button\", attributes = { id = \"theguid-coherency-Red\"\n                  , height = \"22\"\n                  , color = \"#BB2222\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitRed\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Green\"\n                  , height = \"22\"\n                  , color = \"#22BB22\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitGreen\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Blue\"\n                  , height = \"22\"\n                  , color = \"#2222BB\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitBlue\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Purple\"\n                  , height = \"22\"\n                  , color = \"#BB22BB\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitPurple\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Yellow\"\n                  , height = \"22\"\n                  , color = \"#DDDD22\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitYellow\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-White\"\n                  , height = \"22\"\n                  , color = \"#FFFFFF\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitWhite\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Orange\"\n                  , height = \"22\"\n                  , color = \"#DD6633\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitOrange\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Teal\"\n                  , height = \"22\"\n                  , color = \"#29D9D9\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitTeal\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-Pink\"\n                  , height = \"22\"\n                  , color = \"#DD77CC\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitPink\" }, children = {  }}\n                  , {tag = \"Button\", attributes = { id = \"theguid-coherency-None\"\n                  , height = \"22\"\n                  , color = \"#BBBBBB\"\n                  , width = \"22\"\n                  , onClick = \"theguid/highlightUnitNone\" }, children = {  }} }} }} }} }}, \"thepanelid\", uiId),\n                              \"theguid\", guid),\n                              \"thevisibility\", playerColor)\n  return uiTable\nend\n\nfunction onLoad()\n  self.setVar(\"desc-id\", desc())\n  self.setVar(\"isMaster\", true)\n  for k,v in pairs(getAllObjects()) do\n    if v.getVar(\"desc-id\") == desc() and v.getVar(\"isMaster\") and v.getGUID() ~= self.getGUID() then\n      if v.getPosition().x > 9999 and v.getPosition().z > 9999 then\n        log(\"Destroying previous master for this unit: \" .. desc())\n        v.destruct()\n      else\n        log(\"Usurping previous master for this unit: \" .. desc())\n        v.setVar(\"isMaster\", false)\n      end\n    end\n  end\nend\n\nfunction copyUITable(uiTable)\n  local result = {}\n  for k, element in pairs(uiTable) do\n    local newElement = {}\n    newElement[\"tag\"] = element[\"tag\"]\n    if element[\"value\"] ~= nil then\n      newElement[\"value\"], times = string.gsub(element[\"value\"],\"[ ]+\",\" \")\n    end\n    newElement[\"attributes\"] = element[\"attributes\"]\n    newElement[\"children\"] = {}\n    if element[\"children\"] ~= nil then\n      newElement[\"children\"] = copyUITable(element[\"children\"])\n    end\n    table.insert(result, newElement)\n  end\n  return result\nend\n\n\nfunction loadUI(playerColor)\n  local panelId = createName(playerColor)\n  local uiTable = createUI(panelId, playerColor)\n  local currentUI = UI.getXmlTable()\n  local inserted = false\n  for k,element in pairs(currentUI) do\n    if element[\"attributes\"] ~= nil and element[\"attributes\"][\"id\"] == panelId then\n      currentUI[k][\"children\"] = uiTable[\"children\"]\n      inserted = true\n    end\n  end\n  if not inserted then\n    table.insert(currentUI, uiTable)\n  end\n  local result = copyUITable(currentUI)\n  UI.setXmlTable(result)\nend\n\nfunction unloadUI(playerColor)\n  local panelId = createName(playerColor)\n  local uiTable = UI.getXmlTable()\n  local panelIndex = -1\n  for index, element in pairs(uiTable) do\n    if element[\"attributes\"][\"id\"] == panelId then\n      panelIndex = index\n      break\n    end\n  end\n  if panelIndex >= 0 then\n    local el = uiTable[panelIndex]\n  end\n  uiCreated[playerColor] = false\nend\n\nuiCreated = {}\n\ntimesActivated = 0\n\nvalidBaseMillis = {\n  {x = 25, z = 25},\n  {x = 30, z = 30},\n  {x = 32, z = 32},\n  {x = 40, z = 40},\n  {x = 50, z = 50},\n  {x = 55, z = 55},\n  {x = 60, z = 60},\n  {x = 100, z = 100},\n  {x = 25, z = 25},\n  {x = 25, z = 75},\n  {x = 75, z = 25},\n  {x = 120, z = 92},\n  {x = 92, z = 120},\n  {x = 170, z = 105},\n  {x = 105, z = 170},\n}\n\nfunction assignBase(inc, model)\n if Global.getTable(\"bs2tts-saved-bases\") == nil then\n  Global.setTable(\"bs2tts-saved-bases\", {})\n end\n local baseMap = Global.getTable(\"bs2tts-saved-bases\")\n local meshFile = model.getCustomObject().mesh\n if baseMap[meshFile] == nil then\n  log(\"Initing base map\")\n  baseMap[meshFile] = 0\n end\n local index = baseMap[meshFile]\n local newIndex = (index + inc) % #validBaseMillis\n log(\"Base map index is now: \" .. tostring(newIndex))\n log(\"Base millis are: \" .. tostring(validBaseMillis[newIndex+1][\"x\"]) .. \" \" .. tostring(validBaseMillis[newIndex+1][\"z\"]))\n baseMap[meshFile] = newIndex\n Global.setTable(\"bs2tts-saved-bases\", baseMap)\nend\n\nfunction determineBase(model)\n  local chosenBase =  {x = 25, z = 25}\n  local milliToInch = 0.0393701\n  \n  if Global.getTable(\"bs2tts-saved-bases\") and Global.getTable(\"bs2tts-saved-bases\")[model.getCustomObject().mesh] then\n    chosenBase = validBaseMillis[Global.getTable(\"bs2tts-saved-bases\")[model.getCustomObject().mesh] + 1]\n    chosenBase = {x = (chosenBase.x * milliToInch)/2, z = (chosenBase.z * milliToInch)/2}\n  else\n    local bounds = model.getBoundsNormalized()\n    local xBounds = bounds.size.x\n    local zBounds = bounds.size.z\n    local closestSum = 10000000000\n    log(bounds)\n    for k, base in pairs(validBaseMillis) do\n      local baseInchX = (milliToInch - 0.001) * base.x\n      local baseInchZ = (milliToInch - 0.001) * base.z\n      if xBounds > baseInchX and zBounds > baseInchZ then\n        local distSum = (xBounds - baseInchX) + (zBounds - baseInchZ)\n        if distSum < closestSum then\n          closestSum = distSum\n          chosenBase = base\n        end\n      end\n    end\n    log(chosenBase)\n    if chosenBase == nil then\n      chosenBase = {x = xBounds/2, z = zBounds/2}\n    else\n      chosenBase = {x = (chosenBase.x * milliToInch)/2, z = (chosenBase.z * milliToInch)/2}\n    end\n  end\n  return chosenBase\nend\n\nfunction onScriptingButtonDownTable(params)\n  onScriptingButtonDown(params.index, params.peekerColor)\nend\n\nfunction onScriptingButtonDown(index, peekerColor)\n  local player = Player[peekerColor]\n  local name = createName(peekerColor)\n  if (self.getVar(\"isMaster\") and player.getHoverObject() and player.getHoverObject().getVar(\"desc-id\") == desc()) or\n      (#player.getSelectedObjects() > 0 and player.getSelectedObjects()[1].getVar(\"desc-id\") == desc()) then\n    local target = player.getHoverObject() or  player.getSelectedObjects()[1]\n    if index == 1 then\n        loadUI(peekerColor)\n        Wait.frames(function()\n          updateModelCount()\n          UI.setAttribute(createName(peekerColor), \"active\", true)\n        end, 2)\n    end\n    if index == 2 or index == 3 then\n      local inc = index == 2 and -1 or 1\n      local name = target.getName()\n      local current, total = string.gmatch(name,\"([0-9]+)/([0-9]+)\")()\n      current = math.max(tonumber(current) + inc,0)\n      local newName = string.gsub(name, \"([0-9]+)/([0-9]+)\", tostring(current) .. \"/\" .. total)\n      target.setName(newName)\n    end\n    if index == 4 or index == 5 or index == 8 then\n      local inc = index == 4 and 1 or -1\n      if index == 8 then\n        inc = 0\n      end\n      if target.getVar(\"bs2tts-aura-circle\") == nil then\n        target.setVar(\"bs2tts-aura-circle\", 0)\n      end\n      local newRadius = math.max(target.getVar(\"bs2tts-aura-circle\") + inc,0)\n      target.setVar(\"bs2tts-aura-circle\", newRadius)\n      local circ = {}\n      local base = {}\n      local baseRadiuses = determineBase(target)\n      if newRadius > 0 then\n        circ = getCircleVectorPoints(newRadius, baseRadiuses.x, baseRadiuses.z, target)\n        base = getCircleVectorPoints(0, baseRadiuses.x, baseRadiuses.z, target)\n      end\n\n      target.setVectorLines({\n        {\n            points    = circ,\n            color     = highlighting or {1,0,1},\n            thickness = 0.125 * 1/(target.getScale().x),\n            rotation  = {0,0,0},\n        },\n        {\n            points    = base,\n            color     = highlighting or {1,0,1},\n            thickness = 0.1 * 1/(target.getScale().x),\n            rotation  = {0,0,0},\n        }\n      })\n      broadcastToAll(\"Measuring \"..tostring(newRadius)..\"\\\"\")\n    end\n    if index == 6 or index == 7 then\n      local inc = 1\n      if index == 7 then\n        inc = -1\n      end\n      assignBase(inc, target)\n      onScriptingButtonDown(8, peekerColor)\n    end\n  end\nend\n\nfunction onObjectDrop(playerColor, obj)\n  scheduleUpdateIfInUnit(obj)\nend\n\nfunction onObjectDestroy(obj)\n  if obj.getGUID() ~= self.getGUID() then\n    scheduleUpdateIfInUnit(obj)\n  end\nend\n\nfunction scheduleUpdateIfInUnit(obj)\nif obj.getVar(\"desc-id\") == desc() then\n  collectUnitModels()\n  local id = desc() .. \"countModels\"\n  Timer.destroy(id)\n  Timer.create(\n  {\n    identifier = id,\n    function_name = \"updateModelCount\",\n    parameters = {},\n    delay = 0.2\n  }\n)\nend\nend\n\nfunction distance2D(point1, point2)\n  local x = point1.x - point2.x\n  local z = point1.z - point2.z\n  return math.sqrt(x * x + z * z)\nend\n\nunitModels = nil\nunitModelCount = 0\nunitUprightModelCount = 0\n\nfunction collectUnitModels()\n  unitModels = {}\n  unitModelCount = 0\n  unitUprightModelCount = 0\n  for k,v in pairs(getAllObjects()) do\n    if v.getVar(\"desc-id\") == desc() then\n      table.insert(unitModels, v)\n      unitModelCount = unitModelCount + 1\n      if not v.is_face_down then\n        unitUprightModelCount = unitUprightModelCount + 1\n      end\n    end\n  end\n  log(\"Collected \" .. tostring(unitUprightModelCount) .. \" upright models for this unit\")\nend\n\nfunction operateOnModels(fn)\n  if not unitModels then\n    collectUnitModels()\n  end\n  local originModel = nil\n  local dist = 100000000000\n  for k, model in pairs(unitModels) do\n    local newDist = distance2D({x=0,y=0,z=0}, model.getPosition())\n    if not model.is_face_down and newDist < dist then\n      originModel = model\n      dist = newDist\n    end\n  end\n  local seenModels = {}\n  searchModels(originModel, seenModels, fn)\nend\n\nfunction updateModelCount()\n  collectUnitModels()\n  local modelCounts = {}\n  if unitModels then\n    for k, model in pairs(unitModels) do\n      model.highlightOff()\n    end\n  end\n\n  local getModelNames = function(model)\n    if not modelCounts[model.getName()] then\n      modelCounts[model.getName()] = 0\n    end\n    modelCounts[model.getName()] = modelCounts[model.getName()] + 1\n    if highlighting then\n      model.highlightOn(highlighting)\n    end\n  end\n\n  operateOnModels(getModelNames)\n  local label = \"\"\n  local keys = {}\n  for k in pairs(modelCounts) do table.insert(keys, k) end\n  table.sort(keys)\n\n  for index,k in pairs(keys) do\n    local v = modelCounts[k]\n    modelName = string.gsub(k, \"[0-9]+/[0-9]+\",\"\")\n    label = label .. modelName .. \" - \" .. tostring(v) .. \"\\n\"\n  end\n  local theid = self.getGUID() .. \"-modelcount\"\n  UI.setAttribute(theid, \"text\", label )\nend\n\nfunction getCenterDist(obj)\n  local boundsSize = obj.getBoundsNormalized().size\n  local longest = math.max(boundsSize.x, boundsSize.z)\n  return longest/2\nend\n\nfunction arrToS(a)\n  result = \"[] \"\n  for i, k in pairs(a) do\n    result = result .. tostring(k) .. \",\"\n  end\n  result = result .. \" ]\"\n  return result\nend\n\nfunction searchModels(origin, seen, fn)\n  local modelsInRange = 0\n  local rangeModelGUIDS = {}\n  seen[origin.getGUID()] = true\n  for k, model in pairs(unitModels) do\n    if not model.is_face_down and model.getGUID() ~= origin.getGUID() then\n      local originCenterDist = getCenterDist(origin)\n      local modelCenterDist = getCenterDist(model)\n      local dist = distance2D(origin.getPosition(), model.getPosition())\n      if dist < (2.05 + originCenterDist + modelCenterDist) then\n        modelsInRange = modelsInRange + 1\n        table.insert(rangeModelGUIDS, model.getGUID())\n        if (unitUprightModelCount >= 6 and modelsInRange == 2) or (unitUprightModelCount < 6 and modelsInRange == 1) then\n          log(\"Model \" .. tostring(origin.getGUID()) .. \" is in range of \" .. tostring(modelsInRange) .. \" models, namely: \" .. arrToS(rangeModelGUIDS))\n          fn(origin)\n        end\n        if not seen[model.getGUID()] then\n          searchModels(model, seen, fn, modelCount)\n        end\n      end\n    end\n  end\nend\n\nhighlighting = false\n\nfunction highlightUnitRed() highlightUnit(\"Red\") end\nfunction highlightUnitGreen() highlightUnit(\"Green\") end\nfunction highlightUnitBlue() highlightUnit(\"Blue\") end\nfunction highlightUnitPurple() highlightUnit(\"Purple\") end\nfunction highlightUnitYellow() highlightUnit(\"Yellow\") end\nfunction highlightUnitWhite() highlightUnit(\"White\") end\nfunction highlightUnitOrange() highlightUnit(\"Orange\") end\nfunction highlightUnitTeal() highlightUnit(\"Teal\") end\nfunction highlightUnitPink() highlightUnit(\"Pink\") end\n\nfunction highlightUnitNone()\n  highlighting = false\n  updateModelCount()\nend\n\nfunction highlightUnit(color)\n  if highlighting ~= color then\n    highlighting = color\n  else\n    highlighting = false\n  end\n  updateModelCount()\nend\n\nfunction onDestroy()\n  local id = desc() .. \"countModels\"\n  Timer.destroy(id)\n  collectUnitModels()\n  if #unitModels > 1 then\n    local newobj = self.clone({position = {x = 10000, y = 10000, z = 10000}})\n    newobj.setLock(true)\n  end\n  for k,v in pairs(Player.getColors()) do\n    UI.hide(createName(v))\n  end\nend\n\nfunction closeUI(player, val, id)\n  local peekerColor = player.color\n  UI.setAttribute(createName(peekerColor), \"active\", false)\nend\n\nfunction desc()\n  return \"26e04ac4:6f63-b515-98f1-84d8\"\nend\n\nfunction createName(color)\n  local guid = self.getGUID()\n  return \"bs2tts\" .. \"-\" .. color\nend\n\nfunction rotateVector2d(vec, degrees)\n  local sin,cos,toRads = math.sin, math.cos, math.rad\n  local result = {\n    x = vec.x * cos(toRads(degrees)) - vec.z * sin(toRads(degrees)),\n    z = vec.x * sin(toRads(degrees)) + vec.z * cos(toRads(degrees)),\n    y = vec.y\n  }\n  return result\nend\n\nfunction getCircleVectorPoints(radius,baseX, baseZ, obj)\n    local result = {}\n    local scaleFactor = 1/obj.getScale().x\n    local rotationDegrees =  obj.getRotation().y\n    local steps = 64\n    local degrees,sin,cos,toRads = 360/steps, math.sin, math.cos, math.rad\n    for i = 0,steps do\n        table.insert(result,{\n            x = cos(toRads(degrees*i))*((radius+baseX)*scaleFactor),\n            z = sin(toRads(degrees*i))*((radius+baseZ)*scaleFactor),\n            y = 1\n        })\n    end\n    return result\nend\n",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "bd4a01",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -13.7701616,
        "posY": 1.51192892,
        "posZ": -4.049968,
        "rotX": 0.016870847,
        "rotY": 180.001266,
        "rotZ": 0.07987589,
        "scaleX": 1.05,
        "scaleY": 1.05,
        "scaleZ": 1.05
      },
      "Nickname": "Warbringer Nemesis Titan",
      "Description": "WS:2\nBS;4\nS:D\nFR:15\nSI:15\nRE:14\nI:1\nA:3\nHP:30",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/1704032603115423242/61A6EA53AF51D11D68E2C53B708B2C0E198F9386/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/849344881098456925/47C3CD2F1E0B6379C1D2842AD997DDEE763A0DC2/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/1704032198792130215/2134B840876685971989301A3EC7BFC1CD93EB4E/",
        "Convex": true,
        "MaterialIndex": 2,
        "TypeIndex": 1,
        "CustomShader": {
          "SpecularColor": {
            "r": 0.7372549,
            "g": 0.7372549,
            "b": 0.7372549
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    }
  ]
}